{"version":3,"sources":["pages/not-found.module.css","components/preloader/preloader.module.css","components/span-with-link/span-with-link.module.css","pages/feed-info.module.css","components/modal-overlay/modal-overlay.module.css","components/order-details/order-details.module.css","components/profile-form/profile-form.module.css","components/app/app.module.css","components/burger-constructor/burger-constructor.module.css","components/burger-ingredients/burger-ingredients.module.css","services/hooks.ts","components/burger-ingredients/type-of-ingredients.ts","components/burger-ingredients/tabs.tsx","components/burger-ingredients/card.tsx","components/burger-ingredients/block-list.tsx","components/burger-ingredients/block.tsx","components/burger-ingredients/list-of-blocks.tsx","components/preloader/index.ts","components/preloader/preloader.tsx","components/burger-ingredients/index.ts","components/burger-ingredients/burger-ingredients.tsx","components/total-price/index.ts","components/total-price/total-price.tsx","services/actions/data-selected.ts","components/burger-constructor/ingredient-card.tsx","components/burger-constructor/ingredient-list.tsx","components/burger-constructor/title-message.tsx","utils/get-response-data.ts","utils/cookie.ts","utils/constants.ts","services/actions/order.ts","components/burger-constructor/burger-constructor.tsx","components/burger-constructor/index.ts","pages/home.tsx","pages/not-found.tsx","components/nav-item/index.ts","components/nav-item/nav-item.tsx","components/menu/index.ts","components/menu/menu.tsx","services/api.ts","services/actions/user.ts","utils/get-date.ts","utils/process-orders.ts","services/actions/ws.ts","pages/profile.tsx","components/form-wrapper/index.ts","components/form-wrapper/form-wrapper.tsx","components/span-with-link/index.ts","components/span-with-link/span-with-link.tsx","components/login-form/index.ts","components/login-form/login-form.tsx","pages/login.tsx","components/registration-form/index.ts","components/registration-form/registration-form.tsx","pages/registration.tsx","pages/forgot-password.tsx","utils/validate-email.ts","pages/reset-password.tsx","components/ingredient-details/feature.tsx","components/ingredient-details/index.ts","components/ingredient-details/ingredient-details.tsx","pages/ingredient.tsx","components/column/index.ts","components/column/column.tsx","components/ingredient-icon/index.ts","components/ingredient-icon/ingredient-icon.tsx","components/order-card/ingredient-list.tsx","components/order-card/index.ts","components/order-card/order-card.tsx","components/list-of-orders/list-of-orders.tsx","components/list-of-orders/index.ts","components/summury-of-orders/column-of-orders.tsx","components/summury-of-orders/total-orders.tsx","components/summury-of-orders/summury-of-orders.tsx","components/summury-of-orders/index.ts","pages/feed.tsx","services/actions/order-info.ts","components/ingredient-item/index.ts","components/ingredient-item/ingredient-item.tsx","components/feed-info-details/index.ts","components/feed-info-details/feed-info-details.tsx","pages/feed-info.tsx","components/element-with-icon/index.ts","components/element-with-icon/element-with-icon.tsx","components/app-header/index.ts","components/app-header/app-header.tsx","components/modal-overlay/index.ts","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","components/modal/index.ts","components/no-auth-route/index.ts","components/no-auth-route/no-auth-route.tsx","components/order-details/index.ts","components/order-details/order-details.tsx","components/protected-route/index.ts","components/protected-route/protected-route.tsx","components/profile-form/index.ts","components/profile-form/profile-form.tsx","services/actions/data-ingredients.ts","components/app/app.tsx","components/app/index.ts","reportWebVitals.ts","services/reducers/data-ingredients.ts","services/reducers/data-selected.ts","services/reducers/order.ts","services/reducers/order-info.ts","services/reducers/user.ts","services/reducers/ws.ts","services/reducers/ws-user.ts","services/reducers/index.ts","services/middleware/socket-middleware.ts","services/store.ts","index.tsx","pages/login.module.css","components/column/column.module.css","components/ingredient-icon/ingredient-icon.module.css","components/feed-info-details/feed-info-details.module.css","components/order-card/order-card.module.css","components/summury-of-orders/summury-of-orders.module.css","components/modal/modal.module.css","components/app-header/app-header.module.css","components/total-price/total-price.module.css","components/menu/menu.module.css","pages/profile.module.css","components/form-wrapper/form-wrapper.module.css","components/ingredient-item/ingredient-item.module.css","components/nav-item/nav-item.module.css","components/ingredient-details/ingredient-details.module.css","pages/ingredient.module.css","components/element-with-icon/element-with-icon.module.css"],"names":["module","exports","useDispatch","dispatchHook","useSelector","selectorHook","typeOfIngredients","type","name","Tabs","current","setTab","content","useMemo","value","active","onClick","className","styles","header","Card","id","image","price","count","location","useLocation","useDrag","item","collect","monitor","opacity","isDragging","dragRef","to","pathname","state","background","item_link","ref","size","src","alt","width","height","item_row","item_title","BlockList","children","block_list","Block","data","refBun","refSauce","refMain","countOfIngredients","block","filter","map","block_item","_id","image_large","ListOfBlocks","refContainer","scrollHandler","blocks_container","onScroll","list","Preloader","preloader","BurgerIngredients","dataRequest","dataFailed","dataSelected","useRef","useState","setCurrent","e","currentTab","scrollTop","clientHeight","tab","element","scrollIntoView","behavior","counters","forEach","ingredient","index","column","TotalPrice","paddingRight","spanStyle","totalPrice","total","icon_big","icon_def","ADD_SELECTED_INGREDIENT","DELETE_SELECTED_INGREDIENT","REORDER_SELECTED_INGREDIENTS","CLEAR_SELECTED_INGREDIENTS","IngredientCard","isLocked","isDraged","customID","moveCard","divRef","useDrop","accept","handlerID","getHandlerId","hover","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","drop","drag","dispatch","block_isHover","text","thumbnail","handleClose","deleteIngredient","icon_wrapper","IngredientsList","props","ingredients_list","TitleMessage","marginTop","title_message","getResponseData","res","ok","json","then","error","Promise","reject","setCookie","minutes","expires","date","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","document","cookie","getCookie","matches","match","RegExp","replace","decodeURIComponent","undefined","GET_ORDER_REQUEST","GET_ORDER_SUCCESS","GET_ORDER_FAILED","ORDER_RESET","Container","container","BurgerConstructor","isLoggedIn","user","curItem","uuidv4","newDataSelected","isHover","isOver","dropTarget","redirect","setRedirect","reduce","sum","bun","filler","useCallback","column_isHover","length","row_order","arrayOfID","push","fetch","method","headers","authorization","body","JSON","stringify","order","catch","getOrderInformation","alert","button","HomePage","DndProvider","backend","HTML5Backend","NotFound404","history","useHistory","goToHomePage","wrapper","spin","spin_1","burger","burger_1","spin_2","burger_2","spin_3","burger_3","spin_4","burger_4","NavItem","link","exact","activeClassName","item_active","Menu","style","menu","menu_row","menu_column","API_SOURCE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILED","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILED","SIGN_IN_REQUEST","SIGN_IN_SUCCESS","SIGN_IN_FAILED","REFRESH_TOKEN_REQUEST","REFRESH_TOKEN_SUCCESS","REFRESH_TOKEN_FAILED","GET_USER_DATA_REQUEST","GET_USER_DATA_SUCCESS","GET_USER_DATA_FAILED","PATCH_USER_DATA_REQUEST","PATCH_USER_DATA_SUCCESS","PATCH_USER_DATA_FAILED","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAILED","RESTORE_PASSWORD_REQUEST","RESTORE_PASSWORD_SUCCESS","RESTORE_PASSWORD_FAILED","RESTORE_PASSWORD_RESET","USER_RESET","resetPassword","email","mode","cache","credentials","referrerPolicy","resetPasswordRequest","localStorage","setItem","isForgotPassword","success","restorePassword","password","code","restorePasswordRequest","isResetPassword","registrate","cb","registrateRequest","authToken","accessToken","indexOf","split","refreshToken","message","logIn","logInRequest","logOut","getItem","removeItem","getUserData","patchUserData","payload","patchUserDataRequest","afterRefresh","getDate","createdAt","dateTime","parse","currentDate","day","getUTCDate","number","textForms","n1","Math","abs","getTextFormat","hours","toLocaleString","hour","minute","timeZone","saveIngredient","image_mobile","getIngredient","soughtArray","processIngredients","ingredients","tIngr","ingredietnsWithCount","ingredientID","newIngredients","Object","keys","newItem","processOrders","orders","updatingState","isUpdateOrder","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_FAILED","WS_CONNECTION_CLOSED","WS_GET_MESSAGE","WS_UPDATE_ORDER","WS_USER_CONNECTION_START","WS_USER_CONNECTION_SUCCESS","WS_USER_CONNECTION_FAILED","WS_USER_CONNECTION_CLOSED","WS_USER_GET_MESSAGE","WS_USER_UPDATE_ORDER","ProfilePage","textInfo","store","wsUser","useEffect","a","ordersNoUpdating","updateOrder","getOrder","section","left_column","onClickFunction","preventDefault","wrapper_item","FormWrapper","actionFunc","title","validateFunc","form","onSubmit","SpanWithLink","buttonText","spanText","mb","goToLink","LoginForm","logInFailed","logInFailedMessage","setState","handleInputChange","target","from","onChange","charAt","toUpperCase","slice","LoginPage","RegistrationForm","registrateFailed","registrateFailedMessage","placeholder","errorText","RegistrationPage","ForgotPasswordPage","forgotPasswordRequest","setErrorText","test","String","toLowerCase","ResetPasswordPage","newPassword","iconValue","setIcon","onIconClick","productFeatures","measure","valueName","Feature","feature_row","ListOfFeatures","console","log","features","IngredientDetails","ingredientId","useParams","ingredientData","setIngredientData","setError","getIngredientInfo","soughtIngredient","ingredientDataValue","errorValue","obj","key","IngredientPage","wrapp","Column","request","requestFailed","blocks_list","column_mt_none","IngredientIcon","zIndex","leftShift","icon","left","icon_img_hidden","icon_img","icon_count","icon_full","IngredientList","card_list","OrderCard","orderInfo","page","path","card_wrapper","card_row","card_row_big","Orders","ordersAll","ws","ordersUser","includes","updateOrders","ListOfOrders","ColumnOfOrders","column_wrapper","orders_list","item_done","TotalOrders","Summury","totalToday","ordersDone","status","ordersOther","summury_status","SummuryOfOrders","FeedPage","GET_ORDER_INFO_REQUEST","GET_ORDER_INFO_SUCCESS","GET_ORDER_INFO_FAILED","UPDATE_ORDER_INFO","getOrderInfoRequest","IngredientItem","FeedInfoDetails","orderNumber","orderData","setOrderData","getOrderInfo","orderDataValue","soughtOrder","ingredientsContent","orderDataCur","ingredientsFromOrder","status_green","row","FeedInfoPage","ElementWithIcon","link_icon","AppHeader","header_content","elements_wrapper","ModalOverlay","handleModalClose","escFunction","keyCode","addEventListener","removeEventListener","overlay","modalRoot","getElementById","Modal","createPortal","modal","stopPropagation","modal_row","wrapper_wide","NoAuthRoute","rest","render","OrderDetails","orderRequest","orderFailed","ProtectedRoute","ProfileForm","userDataRequest","userDataFailed","userDataFailedMessage","refreshTokenFailed","inputRef","setPayload","disabled","setDisabled","setTimeout","focus","onBlur","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILED","getIngredientsThunk","ModalSwitch","action","goBack","main","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","orderRequestSuccess","orderRequestFailed","logOutRequest","logOutFailed","refreshTokenRequest","forgotPasswordFailed","resetPasswordFailed","wsConnected","wsConnectionRequest","wsConnectionFailed","rootReducer","combineReducers","newSelectedData","splice","newOrders","indexAfterNewOrders","findIndex","unshift","socketMiddleware","wsUrl","wsActions","isUserWebSocket","socket","next","wsInit","onOpen","onMessage","onClose","onError","token","WebSocket","onopen","event","onerror","onmessage","parsedData","restParsedData","onclose","wsUserActions","enchancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","createStore","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.ae771201.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"not-found_wrapper__1aWQ2\",\"container\":\"not-found_container__2vsfc\",\"content\":\"not-found_content__2y_aw\",\"spin\":\"not-found_spin__1T68x\",\"spin_1\":\"not-found_spin_1__2Xria\",\"spin_2\":\"not-found_spin_2__2roGY\",\"spin_3\":\"not-found_spin_3__RT_GN\",\"spin_4\":\"not-found_spin_4__22YAx\",\"burger\":\"not-found_burger__k0ijm\",\"burger_1\":\"not-found_burger_1__1ivhA\",\"moving\":\"not-found_moving__1uCuT\",\"burger_2\":\"not-found_burger_2__T6JUG\",\"burger_3\":\"not-found_burger_3__1RskY\",\"burger_4\":\"not-found_burger_4__2xX9N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__3rFh_\",\"load\":\"preloader_load__3EUCy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"span-with-link_link__1Cw6W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"feed-info_wrapper__3EEM0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal-overlay_overlay__1oybW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon_wrapper\":\"order-details_icon_wrapper__34_3d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"profile-form_row__16rVn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"app_main__16BYi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"burger-constructor_column__DH4B1\",\"column_isHover\":\"burger-constructor_column_isHover__337ms\",\"title_message\":\"burger-constructor_title_message__hrD8U\",\"ingredients_list\":\"burger-constructor_ingredients_list___3DMI\",\"block\":\"burger-constructor_block__1yqhY\",\"icon_wrapper\":\"burger-constructor_icon_wrapper__1Usc8\",\"row_order\":\"burger-constructor_row_order__1A4it\",\"button\":\"burger-constructor_button__211gr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"burger-ingredients_column__2flRp\",\"header\":\"burger-ingredients_header__2qRvX\",\"blocks_container\":\"burger-ingredients_blocks_container__v2fSH\",\"list\":\"burger-ingredients_list__29NhX\",\"block_list\":\"burger-ingredients_block_list__2mxJb\",\"block\":\"burger-ingredients_block__3ArTa\",\"block_item\":\"burger-ingredients_block_item__2ifSp\",\"item_link\":\"burger-ingredients_item_link__w8VoT\",\"item_row\":\"burger-ingredients_item_row__1v4gX\",\"item_title\":\"burger-ingredients_item_title__NDEG7\"};","import {\r\n  TypedUseSelectorHook,\r\n  useDispatch as dispatchHook,\r\n  useSelector as selectorHook\r\n} from 'react-redux';\r\nimport { AppDispatch, RootStore, AppThunk } from './types';\r\n\r\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();\r\nexport const useSelector: TypedUseSelectorHook<RootStore> = selectorHook;","export type TTab = 'bun' | 'sauce' | 'main';\r\ntype TTypeOfIngredients = {type: TTab, name: string};\r\n\r\nexport const typeOfIngredients: TTypeOfIngredients[]= [\r\n  {type: \"bun\", name: \"Булки\"},\r\n  {type: \"sauce\", name: \"Соусы\"},\r\n  {type: \"main\", name: \"Начинки\"},\r\n];","import { FC, useMemo } from 'react';\r\n\r\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport styles from './burger-ingredients.module.css';\r\nimport { TTab, typeOfIngredients } from './type-of-ingredients';\r\n\r\ntype TTabProps = {\r\n  current: TTab | string,\r\n  setTab: (current: TTab | string ) => void,\r\n};\r\n\r\nexport const Tabs: FC<TTabProps> = ({ current, setTab }) => {\r\n  const content = useMemo(\r\n    () => {\r\n      return (\r\n        <>\r\n          <Tab value = {typeOfIngredients[0].type} active={current === 'bun'} onClick={setTab}>\r\n            {typeOfIngredients[0].name}\r\n          </Tab>\r\n          <Tab value={typeOfIngredients[1].type} active={current === 'sauce'} onClick={setTab}>\r\n            {typeOfIngredients[1].name}\r\n          </Tab>\r\n          <Tab value={typeOfIngredients[2].type} active={current === 'main'} onClick={setTab}>\r\n            {typeOfIngredients[2].name}\r\n          </Tab>\r\n        </>\r\n      )\r\n    },\r\n    [current, setTab]\r\n  );\r\n  return (\r\n    <div className={ `${styles.header} mb-10` }>\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n","import { FC } from 'react';\r\nimport { useDrag } from 'react-dnd';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nimport styles from './burger-ingredients.module.css';\r\nimport { Counter, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\ntype TCardProps = {\r\n  id: string,\r\n  name: string,\r\n  price: number,\r\n  image: string,\r\n  count: number,\r\n  type: string,\r\n}\r\n\r\nexport const Card: FC<TCardProps> = ({ id, image, name, price, count, type }) =>{\r\n  const location = useLocation();\r\n    \r\n  const [{ opacity }, dragRef] = useDrag({\r\n    type: 'ingredient',\r\n    item: { id, type },\r\n    collect: monitor => ({\r\n      opacity: monitor.isDragging() ? 0 : 1,\r\n  })\r\n  });\r\n\r\n  return (\r\n    <Link\r\n      key={id}\r\n      to={{\r\n        pathname: `/ingredients/${id}`,\r\n        state: { background: location },\r\n      }}\r\n      className={ styles.item_link }\r\n    >\r\n      <div ref={dragRef}>\r\n        <Counter count={count} size=\"default\" />\r\n        <img src={image} alt={name} width=\"240\" height=\"120\"/>\r\n        <div className={`${styles.item_row} pt-1 pb-1`}>\r\n          <span className=\"text text_type_digits-default pr-2\">{price}</span>\r\n          <CurrencyIcon type='primary' />\r\n        </div>\r\n        <h4 className={`${styles.item_title} text text_type_main-default`}>{name}</h4>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n","import { FC, ReactElement } from 'react';\r\n\r\nimport styles from './burger-ingredients.module.css';\r\n\r\ntype TBlockListProps = {\r\n  children: Array<ReactElement>,\r\n}\r\n\r\nexport const BlockList: FC<TBlockListProps> = ({ children }) => {\r\n  return (\r\n    <ul className={`${styles.block_list} ml-4`}>\r\n      {children}\r\n    </ul>\r\n  );\r\n}\r\n","import { FC, RefObject } from 'react';\r\n\r\nimport styles from './burger-ingredients.module.css';\r\nimport { Card } from './card';\r\nimport { BlockList } from './block-list';\r\n\r\ntype TIngredient = {\r\n  _id: string,\r\n  image: string,\r\n  image_large: string,\r\n  image_mobile: string,\r\n  name: string,\r\n  price: number,\r\n  type: string,\r\n}\r\n\r\ntype TBlock = {\r\n  data: Array<TIngredient>,\r\n  name: string,\r\n  type: string,\r\n  refBun: RefObject<HTMLLIElement>,\r\n  refSauce: RefObject<HTMLLIElement>\r\n  refMain: RefObject<HTMLLIElement>,\r\n  countOfIngredients: {[ingredientID in string]: number},\r\n};\r\n\r\nexport const Block: FC<TBlock> = ({ data, name, type, refBun, refSauce, refMain, countOfIngredients }) =>{\r\n  return (\r\n    <li className={`mt-10 ${styles.block}`} data-id={type}\r\n      ref={type==='bun' ? refBun : type==='sauce' ? refSauce : refMain}>\r\n      <h3 className='text text_type_main-medium pb-6'>{name}</h3>\r\n      <BlockList \r\n        children = {\r\n          data.filter((item: TIngredient) => item.type === type)\r\n          .map((item: TIngredient) =>\r\n            <li\r\n              key={`${item._id}`}\r\n              className={ `${styles.block_item} mb-8` }\r\n              data-id={item._id} data-type={type}\r\n            >\r\n              <Card\r\n                image={item.image_large} name={item.name} type={type}\r\n                count={countOfIngredients[item._id] || 0} price={item.price} id={item._id}\r\n              />\r\n            </li>\r\n          )\r\n        }\r\n      />\r\n    </li>\r\n  );\r\n}\r\n","import { FC, ReactElement, RefObject, UIEvent } from 'react';\r\n\r\nimport styles from './burger-ingredients.module.css';\r\n\r\ntype TListOfBlockProps = {\r\n  children: Array<ReactElement>,\r\n  refContainer: RefObject<HTMLDivElement>,\r\n  scrollHandler: (e: UIEvent<HTMLDivElement>) => void,\r\n}\r\n\r\nexport const ListOfBlocks: FC<TListOfBlockProps> = ({ children, refContainer, scrollHandler }) => {\r\n  return (\r\n    <div\r\n      className={ `pr-2 ${styles.blocks_container}`}\r\n      ref={refContainer}\r\n      onScroll={scrollHandler}\r\n      data-id='container'>\r\n      <ul className={`${styles.list}`}>\r\n        {children}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import { Preloader } from './preloader';\r\nexport default Preloader;","import styles from './preloader.module.css';\r\n\r\nexport const Preloader = () => {\r\n  return (\r\n    <div className={`${styles.preloader}`}>loading</div>\r\n  );\r\n}","import BurgerIngredients from './burger-ingredients';\r\nexport default BurgerIngredients;","import { useMemo, useState, useRef, UIEvent } from 'react';\r\nimport { useSelector } from '../../services/hooks';\r\n\r\nimport styles from './burger-ingredients.module.css';\r\nimport { Tabs } from './tabs';\r\nimport { Block } from './block';\r\nimport { ListOfBlocks } from './list-of-blocks';\r\nimport Preloader from '../preloader';\r\nimport { TTab, typeOfIngredients } from './type-of-ingredients';\r\n\r\nconst BurgerIngredients = () => {\r\n  const { data, dataRequest, dataFailed, dataSelected } = useSelector((state) => ({\r\n    data: state.data.data,\r\n    dataRequest: state.data.dataRequest,\r\n    dataFailed: state.data.dataFailed,\r\n    dataSelected: state.dataSelected.dataSelected\r\n  }));\r\n  \r\n  const refContainer = useRef<HTMLDivElement>(null);\r\n  const refBun = useRef<HTMLLIElement>(null);\r\n  const refSauce = useRef<HTMLLIElement>(null);\r\n  const refMain = useRef<HTMLLIElement>(null);\r\n\r\n  const [current, setCurrent] = useState<TTab | string>('bun');\r\n  \r\n  const scrollHandler = (e: UIEvent<HTMLDivElement>) => {\r\n    let currentTab: TTab = 'bun';\r\n    if ( refContainer.current && refBun.current && refSauce.current) {\r\n      currentTab =\r\n        refContainer.current.scrollTop-refBun.current.clientHeight<0 ? 'bun'\r\n        :\r\n          refContainer.current.scrollTop-refBun.current.clientHeight-refSauce.current.clientHeight<0 ? 'sauce'\r\n          : 'main';\r\n    }\r\n    \r\n    setCurrent(currentTab);\r\n  }\r\n\r\n  const setTab = (tab: TTab | string) => {\r\n    setCurrent(tab);\r\n    const element =\r\n      tab === 'bun' ? refBun.current : tab === 'sauce' ? refSauce.current : refMain.current;\r\n    if (element) element.scrollIntoView({ behavior: \"smooth\" });\r\n  }\r\n\r\n  const countOfIngredients = useMemo(\r\n    ()=> {\r\n      type TIngr = {[ingredientID in string]: number};\r\n      const counters: TIngr = {};\r\n      dataSelected.forEach((ingredient) => {\r\n        if (!counters[ingredient._id]) counters[ingredient._id] = 0;\r\n        counters[ingredient._id]++;\r\n        if (ingredient.type === 'bun') counters[ingredient._id] = 2;\r\n      });\r\n    return counters;\r\n    },\r\n    [dataSelected]\r\n  );\r\n  \r\n  const content = useMemo(\r\n    () => {\r\n      return dataRequest ? (\r\n        <Preloader />\r\n      ) : (\r\n        dataFailed ? (\r\n          <div className=\"text text_type_main-large\">Произошла ошибка. Перезагрузите браузер.</div>\r\n        ) : (\r\n          <>\r\n            <h2 className='text text_type_main-large pb-5'>Соберите бургер</h2>\r\n            <Tabs current={current} setTab={setTab}/>\r\n            <ListOfBlocks\r\n              refContainer={refContainer}\r\n              scrollHandler={scrollHandler}\r\n            >\r\n              {typeOfIngredients.map(\r\n                (item, index) =>\r\n                  <Block\r\n                    key={`block${index}`}\r\n                    type={item.type}\r\n                    name={item.name}\r\n                    data={data}\r\n                    refBun={refBun}\r\n                    refSauce={refSauce}\r\n                    refMain={refMain}\r\n                    countOfIngredients={countOfIngredients}\r\n                  />\r\n              )}\r\n            </ListOfBlocks>\r\n          </>\r\n        )\r\n      )\r\n    },\r\n    [data, dataRequest, dataFailed, current, countOfIngredients]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <section className={`${styles.column} pt-10 mr-10`}>\r\n        {content}\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BurgerIngredients","import {TotalPrice} from \"./total-price\";\r\nexport default TotalPrice;","import { FC } from 'react';\r\n\r\nimport { CurrencyIcon} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport styles from './total-price.module.css';\r\n\r\ntype TTotalPrice = {\r\n  totalPrice: number,\r\n  type: string,\r\n  count?: number\r\n}\r\n\r\nexport const TotalPrice: FC<TTotalPrice> = ({ count, totalPrice, type }) => {\r\n  let paddingRight, spanStyle;\r\n  if (type === 'large') {\r\n    paddingRight = \"pr-10\";\r\n    spanStyle = \"text_type_digits-medium\";\r\n  } else {\r\n    spanStyle = \"text_type_digits-default\"\r\n  }\r\n  return (\r\n    <div className={ `${styles.total} ${paddingRight}`}>\r\n      <span className={`text ${spanStyle} pr-2`}>\r\n        {count ? `${count} x ${totalPrice}` : `${totalPrice}`}\r\n      </span>\r\n      <div className= {type === 'large' ? `${styles.icon_big}` : `${styles.icon_def}` }>\r\n        <CurrencyIcon type=\"primary\" />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { TIngredientSelected } from '../types/data';\r\n\r\nexport const ADD_SELECTED_INGREDIENT: 'ADD_SELECTED_INGREDIENT' = 'ADD_SELECTED_INGREDIENT';\r\nexport const DELETE_SELECTED_INGREDIENT: 'DELETE_SELECTED_INGREDIENT' = 'DELETE_SELECTED_INGREDIENT';\r\nexport const REORDER_SELECTED_INGREDIENTS: 'REORDER_SELECTED_INGREDIENTS' = 'REORDER_SELECTED_INGREDIENTS';\r\n\r\nexport const CLEAR_SELECTED_INGREDIENTS: 'CLEAR_SELECTED_INGREDIENTS' = 'CLEAR_SELECTED_INGREDIENTS';\r\n\r\nexport interface IAddSelectedIngredient {\r\n  readonly type: typeof ADD_SELECTED_INGREDIENT;\r\n  readonly newDataSelected: Array<TIngredientSelected>;\r\n}\r\n\r\nexport interface IDeleteSelectedIngredient {\r\n  readonly type: typeof DELETE_SELECTED_INGREDIENT;\r\n  readonly customID: string;\r\n}\r\n\r\nexport interface IReorderSelectedIngredient {\r\n  readonly type: typeof REORDER_SELECTED_INGREDIENTS;\r\n  readonly hoverIndex: number;\r\n  readonly dragIndex: number;\r\n}\r\n\r\nexport interface IClearSelectedIngredient {\r\n  readonly type: typeof CLEAR_SELECTED_INGREDIENTS;\r\n}\r\n\r\nexport interface IDefault {\r\n  readonly type: typeof undefined;\r\n}\r\n\r\nexport type TDataSelectedActions = \r\n  | IAddSelectedIngredient\r\n  | IDeleteSelectedIngredient\r\n  | IReorderSelectedIngredient\r\n  | IClearSelectedIngredient\r\n  | IDefault;","import { FC } from 'react';\r\nimport { useDispatch } from '../../services/hooks';\r\nimport { useRef } from 'react';\r\nimport { useDrag, useDrop, XYCoord } from 'react-dnd';\r\n\r\nimport styles from './burger-constructor.module.css';\r\nimport { ConstructorElement, DragIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { DELETE_SELECTED_INGREDIENT } from '../../services/actions/data-selected';\r\n\r\ntype TIngredientCardProps = {\r\n  type: \"top\" | \"bottom\" | undefined,\r\n  isLocked: boolean,\r\n  isDraged: boolean,\r\n  name: string,\r\n  price: number,\r\n  image: string,\r\n  id: string,\r\n  customID: string,\r\n  moveCard: Function,\r\n  index: number,\r\n};\r\n\r\nexport const IngredientCard: FC<TIngredientCardProps> = ({ type, isLocked, isDraged, name, price, image, id, customID, moveCard, index }) => {\r\n  const divRef = useRef<HTMLLIElement>(null);\r\n  const [{ handlerID }, drop] = useDrop({\r\n    accept: 'card',\r\n    collect(monitor) {\r\n      return {\r\n        handlerID: monitor.getHandlerId(),\r\n      };\r\n    },\r\n    hover(item: { index: number }, monitor) {\r\n      if (!divRef.current) {\r\n        return;\r\n      };\r\n      const dragIndex = item.index;\r\n      const hoverIndex = index;\r\n      if (dragIndex === hoverIndex) {\r\n        return;\r\n      }\r\n      const hoverBoundingRect = divRef.current?.getBoundingClientRect();\r\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n      const clientOffset: XYCoord | null = monitor.getClientOffset();\r\n      const hoverClientY = clientOffset ? (clientOffset.y - hoverBoundingRect.top) : null;\r\n      if (hoverClientY) {\r\n        if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n          return;\r\n        }\r\n        if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n          return;\r\n        }\r\n      };\r\n      moveCard(dragIndex, hoverIndex);\r\n      item.index = hoverIndex;\r\n    },\r\n  });\r\n\r\n  const [{ isDragging }, drag] = useDrag({\r\n    type: 'card',\r\n    item: () => {\r\n        return { id, index };\r\n    },\r\n    collect: (monitor) => ({\r\n        isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  drag(drop(divRef));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteIngredient = (id: string, customID: string) => {\r\n    dispatch({\r\n      type: DELETE_SELECTED_INGREDIENT,\r\n      customID\r\n    });\r\n  }\r\n\r\n  return (\r\n    <li className={`mt-4 pl-8 ${styles.block} ${isDragging ? styles.block_isHover : ''}`} ref={divRef} data-handler-id={handlerID}>\r\n      <ConstructorElement \r\n        type={type}\r\n        isLocked={isLocked}\r\n        text={name}\r\n        price={price}\r\n        thumbnail={image}\r\n        handleClose={() => deleteIngredient(id, customID)}\r\n      />\r\n      <div className={ styles.icon_wrapper }>\r\n        {isDraged&&<DragIcon type=\"primary\" />}\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n","import { FC } from 'react';\r\n\r\nimport styles from './burger-constructor.module.css';\r\n\r\ntype TIngredientListProps = React.ReactNode;\r\n\r\nexport const IngredientsList: FC<TIngredientListProps> = (props) =>{\r\n  return (\r\n    <ul className={`${styles.ingredients_list} `}>\r\n      {props.children}\r\n    </ul>\r\n  );\r\n}\r\n","import { FC } from 'react';\r\n\r\nimport styles from './burger-constructor.module.css';\r\n\r\ntype TIngredientListProps = {\r\n  text: string | number,\r\n  marginTop?: string\r\n};\r\n\r\nexport const TitleMessage: FC<TIngredientListProps> = ({ text, marginTop }) => {\r\n  return (\r\n    <p className=\r\n      {\r\n        `text text_type_main-default text_color_inactive mt-${marginTop} ml-8 pt-5 pb-5 \r\n        ${styles.title_message}`\r\n      }\r\n    >\r\n      {text}\r\n    </p>\r\n  );\r\n}\r\n","export const getResponseData =\r\n  (res: Response) => {\r\n    return res.ok ?\r\n      res.json()\r\n    : \r\n      res.json()\r\n        .then((error) => Promise.reject(error));\r\n}","import { SECONDS_IN_MINUTE, MILLISECONDS_IN_SECOND } from \"./constants\";\r\n\r\nexport function setCookie(name: string, value: string | null, minutes: number) {\r\n  let expires = \"\";\r\n  if (minutes) {\r\n    let date = new Date();\r\n    date.setTime(date.getTime() + (minutes * SECONDS_IN_MINUTE * MILLISECONDS_IN_SECOND));\r\n    expires = \"; expires=\" + date.toUTCString();\r\n  }\r\n  value = (typeof value === \"string\") ? encodeURIComponent(value) : '';\r\n  const updatedCookie = name + '=' + value + expires + \"; path=/\";\r\n  document.cookie = updatedCookie;\r\n}\r\n\r\nexport function getCookie(name: string) {\r\n  const matches = document.cookie.match(\r\n    new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\r\n  );\r\n  return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n\r\nexport function deleteCookie(name: string) {\r\n  setCookie(name, null, -1);\r\n}","export const ESC_KEYCODE = 27;\r\nexport const SECONDS_IN_MINUTE = 60;\r\nexport const MILLISECONDS_IN_SECOND = 1000;\r\nexport const LIFE_OF_COOKIE_IN_MINUTES = 20;","import { getResponseData } from \"../../utils/get-response-data\";\r\nimport { getCookie } from '../../utils/cookie';\r\nimport { TOrderFull } from \"../types/data\";\r\nimport { AppDispatch } from \"../types\";\r\n\r\nexport const GET_ORDER_REQUEST: 'GET_ORDER_REQUEST' = 'GET_ORDER_REQUEST';\r\nexport const GET_ORDER_SUCCESS: 'GET_ORDER_SUCCESS' = 'GET_ORDER_SUCCESS';\r\nexport const GET_ORDER_FAILED: 'GET_ORDER_FAILED' = 'GET_ORDER_FAILED';\r\nexport const ORDER_RESET: 'ORDER_RESET' = 'ORDER_RESET';\r\n\r\nexport interface IGetOrderRequest {\r\n  readonly type: typeof GET_ORDER_REQUEST;\r\n}\r\n\r\nexport interface IGetOrderSuccess {\r\n  readonly type: typeof GET_ORDER_SUCCESS;\r\n  readonly order: TOrderFull;\r\n}\r\n\r\nexport interface IGetOrderFailed {\r\n  readonly type: typeof GET_ORDER_FAILED;\r\n}\r\n\r\nexport interface IOrderReset {\r\n  readonly type: typeof ORDER_RESET;\r\n}\r\n\r\nexport interface IDefault {\r\n  readonly type: typeof undefined;\r\n}\r\n\r\nexport type TOrderActions = \r\n  | IGetOrderRequest\r\n  | IGetOrderSuccess\r\n  | IGetOrderFailed\r\n  | IOrderReset\r\n  | IDefault;\r\n\r\nconst API_SOURCE_ORDER = 'https://norma.nomoreparties.space/api/orders';\r\n\r\nexport function getOrderInformation(arrayOfID: Array<string>) {\r\n  return function(dispatch: AppDispatch) {\r\n    dispatch({\r\n      type: GET_ORDER_REQUEST\r\n    });\r\n    return fetch(API_SOURCE_ORDER, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: `Bearer ` + getCookie('accessToken')\r\n      },\r\n      body: JSON.stringify({\"ingredients\": arrayOfID})\r\n    })\r\n      .then(getResponseData)\r\n      .then(res => {\r\n        dispatch({\r\n          type: GET_ORDER_SUCCESS,\r\n          order: res.order\r\n        });\r\n      })\r\n      .catch(error => {\r\n        dispatch({\r\n          type: GET_ORDER_FAILED\r\n        });\r\n      })\r\n  }\r\n}\r\n","import { FC, useState, useMemo, useCallback } from 'react';\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { useDrop } from 'react-dnd';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { ConstructorElement } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport TotalPrice from '../total-price';\r\nimport styles from './burger-constructor.module.css';\r\nimport { IngredientCard } from './ingredient-card';\r\nimport { IngredientsList } from './ingredient-list';\r\nimport { TitleMessage } from './title-message';\r\nimport { getOrderInformation } from '../../services/actions/order';\r\nimport {\r\n  ADD_SELECTED_INGREDIENT,\r\n  REORDER_SELECTED_INGREDIENTS,\r\n  CLEAR_SELECTED_INGREDIENTS\r\n} from '../../services/actions/data-selected';\r\n\r\ntype TContainerProps = React.ReactNode;\r\n\r\nconst Container: FC<TContainerProps> = (props) => {\r\n  return (\r\n    <ul className={`${styles.container} `}>\r\n      {props.children}\r\n    </ul>\r\n  );\r\n}\r\n\r\nconst BurgerConstructor = () => {\r\n  const { data, dataSelected, isLoggedIn } = useSelector((state) => ({\r\n    data: state.data.data,\r\n    dataSelected: state.dataSelected.dataSelected,\r\n    isLoggedIn: state.user.isLoggedIn\r\n  }));\r\n  const dispatch = useDispatch();\r\n\r\n  const [{ isHover }, dropTarget] = useDrop({\r\n    accept: 'ingredient',\r\n    drop(curItem: { id: string, type: string }) {\r\n      const customID = uuidv4();\r\n      const newDataSelected = curItem.type !== 'bun' ?\r\n        [...dataSelected,\r\n          {...data.filter(item => item._id === curItem.id)[0], customID: customID}\r\n        ]\r\n      :\r\n        [...dataSelected.filter(item => item.type !== 'bun'),\r\n          {...data.filter(item => item._id === curItem.id)[0], customID: customID}\r\n        ];\r\n      dispatch({\r\n        type: ADD_SELECTED_INGREDIENT,\r\n        newDataSelected\r\n      });\r\n    },\r\n    collect: monitor => ({\r\n      isHover: monitor.isOver(),\r\n    })\r\n  });\r\n\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  const handleButtonClick = (e: React.MouseEvent) => {\r\n    if (!isLoggedIn) {\r\n      setRedirect(true);\r\n    } else {\r\n      if (dataSelected.filter(item => item.type === 'bun').length!==0) {\r\n        let arrayOfID: Array<string> = [];\r\n        dataSelected.map(item => {\r\n          if (item.type === 'bun') {\r\n            arrayOfID.push(item._id);\r\n            arrayOfID.push(item._id)\r\n          } else {\r\n            arrayOfID.push(item._id)\r\n          }\r\n        });\r\n        \r\n        dispatch(getOrderInformation(arrayOfID));\r\n\r\n        dispatch({\r\n          type: CLEAR_SELECTED_INGREDIENTS\r\n        })\r\n      } else {\r\n        alert('Выберите булку');\r\n      }\r\n    }\r\n  }\r\n\r\n  const totalPrice = useMemo(\r\n    ()=> {\r\n      return dataSelected.reduce(\r\n        (sum, item) =>\r\n          (item.type !== 'bun')\r\n            ?\r\n              (sum + item.price)\r\n            :\r\n              (sum + item.price*2)\r\n          , 0\r\n      );\r\n    },\r\n    [dataSelected]\r\n  );\r\n  \r\n  const bun = useMemo(\r\n    () => {\r\n      return dataSelected.filter(item => item.type === 'bun')\r\n    },\r\n    [dataSelected]\r\n  );\r\n  \r\n  const filler = useMemo(\r\n    () => {\r\n      return dataSelected.filter(item => item.type !== 'bun')\r\n    },\r\n    [dataSelected]\r\n  );\r\n\r\n  const moveCard = useCallback(\r\n    (dragIndex, hoverIndex) => {\r\n      dispatch({\r\n        type: REORDER_SELECTED_INGREDIENTS,\r\n        dragIndex: dragIndex,\r\n        hoverIndex: hoverIndex,\r\n      })\r\n    }, [dispatch]\r\n  );\r\n\r\n  if (redirect) {\r\n    return (\r\n      <Redirect to={{ pathname: '/login' }} />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section className={`${styles.column} ${isHover ? styles.column_isHover : ''} pt-25 pl-4`} ref={dropTarget}>\r\n        {dataSelected.length===0 ? (\r\n          <TitleMessage\r\n            text='Переместите сюда ингредиенты для бургера'\r\n          />\r\n        ) : (\r\n          <>\r\n            <Container>\r\n              {bun.length!==0 ? \r\n                <li className={`mt-4 pl-8 ${styles.block}`}>\r\n                  <ConstructorElement \r\n                    type={'top'}\r\n                    isLocked={true}\r\n                    text={`${bun[0].name} (верх)`}\r\n                    price={bun[0].price}\r\n                    thumbnail={bun[0].image}\r\n                    // id={bun[0]._id}\r\n                    // handleClose={() => removeIngredientHandler(bun[0]._id)}\r\n                  />\r\n                </li>\r\n                :\r\n                <TitleMessage\r\n                  text='Переместите сюда булку (верх)'\r\n                  marginTop='15'\r\n                />\r\n              }\r\n              <li>\r\n                {filler && filler.length!==0 ?\r\n                  <IngredientsList>\r\n                    {dataSelected.map((item,index) => \r\n                      item.type !== 'bun' &&\r\n                        <IngredientCard\r\n                          key={`${index}`}\r\n                          index={index}\r\n                          type={undefined}\r\n                          name={item.name}\r\n                          isLocked={false}\r\n                          price={item.price}\r\n                          image={item.image}\r\n                          id={item._id}\r\n                          customID={item.customID}\r\n                          isDraged={true}\r\n                          moveCard={moveCard}\r\n                        />\r\n                    )}\r\n                  </IngredientsList>\r\n                  :\r\n                  <TitleMessage\r\n                    text='Переместите сюда начинку'\r\n                    marginTop='5'\r\n                  />\r\n                }\r\n              </li>\r\n              {bun && bun.length!==0 ? \r\n                <li className={`mt-4 pl-8 ${styles.block}`}>\r\n                  <ConstructorElement \r\n                    type={'bottom'}\r\n                    isLocked={true}\r\n                    text={`${bun[0].name} (низ)`}\r\n                    price={bun[0].price}\r\n                    thumbnail={bun[0].image}\r\n                    // id={bun[0]._id}\r\n                  />\r\n                </li>\r\n                :\r\n                <TitleMessage\r\n                  text='Переместите сюда булку (низ)'\r\n                  marginTop='5'\r\n                />\r\n              }\r\n            </Container>\r\n            <div className={ `${styles.row_order} mt-10 mr-4` }>\r\n              <TotalPrice totalPrice={totalPrice} type='large'/>\r\n              { isLoggedIn ? (\r\n                  bun.length!==0 &&\r\n                    <Link \r\n                      to={{\r\n                        pathname: `/order`\r\n                      }}\r\n                      onClick={handleButtonClick}\r\n                      className={ `${styles.button} pt-5 pr-10 pb-5 pl-10 text text_type_main-default`}\r\n                    >\r\n                      Оформить заказ\r\n                    </Link>\r\n                  ) : (\r\n                    <Link \r\n                      to={{\r\n                        pathname: `/login`\r\n                      }}\r\n                      className={ `${styles.button} pt-5 pr-10 pb-5 pl-10 text text_type_main-default`}\r\n                    >\r\n                      Войти\r\n                    </Link>\r\n                  )\r\n              }\r\n            </div>\r\n          </>\r\n        )}\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BurgerConstructor","import BurgerConstructor from './burger-constructor';\r\nexport default BurgerConstructor;","import { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\n\r\nimport BurgerIngredients from '../components/burger-ingredients';\r\nimport BurgerConstructor from '../components/burger-constructor';\r\n\r\nexport const HomePage = () => {\r\n  return (\r\n    <DndProvider backend={HTML5Backend}>\r\n      <BurgerIngredients />\r\n      <BurgerConstructor />\r\n    </DndProvider>\r\n  );\r\n}\r\n\r\nexport default HomePage;","import { useHistory } from \"react-router-dom\";\r\nimport { useCallback } from \"react\";\r\nimport styles from './not-found.module.css';\r\nimport { Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nexport const NotFound404 = () => {\r\n  const history = useHistory();\r\n\r\n  const goToHomePage = useCallback(\r\n    () => {\r\n        history.replace({ pathname: '/' });\r\n    },\r\n    [history]\r\n  );\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.container}>\r\n        <div className={styles.content}>\r\n          <h1 className=\"text text_type_main-large text_color_inactive\">ОШИБКА</h1>\r\n          <h2 className=\"text text_type_digits-large\">404</h2>\r\n          <p className=\"text text_type_main-medium text_color_inactive\">Эта страница находится за пределами Галактики</p>\r\n          <div>\r\n            <p className=\"text text_type_main-default text_color_inactive mb-5\">\r\n              Попробуйте вернуться на домашнюю страницу.\r\n            </p>\r\n            <Button\r\n              type=\"primary\"\r\n              size=\"large\"\r\n              onClick={goToHomePage}\r\n            >\r\n              На домашнюю страницу\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className={`${styles.spin} ${styles.spin_1}`}>\r\n          <div className={`${styles.burger} ${styles.burger_1}`}></div>\r\n        </div>\r\n        <div className={`${styles.spin} ${styles.spin_2}`}>\r\n          <div className={`${styles.burger} ${styles.burger_2}`}></div>\r\n        </div>\r\n        <div className={`${styles.spin} ${styles.spin_3}`}>\r\n          <div className={`${styles.burger} ${styles.burger_3}`}></div>\r\n        </div>\r\n        <div className={`${styles.spin} ${styles.spin_4}`}>\r\n          <div className={`${styles.burger} ${styles.burger_4}`}></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import { NavItem } from \"./nav-item\";\r\n\r\nexport default NavItem;","import React, { FC } from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './nav-item.module.css';\r\n\r\ntype TNavItemProps = {\r\n  children: React.ReactNode,\r\n  link: string,\r\n};\r\n\r\nexport const NavItem: FC<TNavItemProps> = ({ children, link}) => {\r\n  return (\r\n    <NavLink\r\n      exact\r\n      to={{ pathname: link }}\r\n      className={`text text_type_main-medium text_color_inactive ${styles.item}`}\r\n      activeClassName={`text text_type_main-medium ${styles.item_active}`}\r\n    >\r\n      {children}\r\n    </NavLink>\r\n  );\r\n}\r\n","import Menu from \"./menu\";\r\nexport default Menu","import { FC } from 'react';\r\n\r\nimport styles from './menu.module.css';\r\n\r\ntype TMenuProps = {\r\n  children: React.ReactNode,\r\n  style: string\r\n}\r\n\r\nconst Menu: FC<TMenuProps> = ({ children, style }) => {\r\n  return (\r\n    <nav className={ styles.menu }>\r\n      <ul className=\r\n        { style === 'row' ? styles.menu_row : styles.menu_column }>\r\n        {children}\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Menu","import { getCookie } from '../utils/cookie';\r\nimport { TPayloadUser } from './types/data';\r\n\r\nconst API_SOURCE = \"https://norma.nomoreparties.space/api/\";\r\n\r\nexport const resetPasswordRequest = (email: string) => {\r\n  return fetch(`${API_SOURCE}password-reset`, {\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n    body: JSON.stringify({\"email\": email})\r\n  })\r\n}\r\n\r\nexport const restorePasswordRequest = (password: string, code: string) => {\r\n  return fetch(`${API_SOURCE}password-reset/reset`, {\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n    body: JSON.stringify({\"password\": password, \"token\": code})\r\n  })\r\n}\r\n\r\nexport const registrateRequest = (email: string, password: string, name: string) => {\r\n  return fetch(`${API_SOURCE}auth/register`, {\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n    body: JSON.stringify({\"email\": email, \"password\": password, \"name\": name})\r\n  })\r\n}\r\n\r\nexport const logInRequest = (email: string, password: string) => {\r\n  return fetch(`${API_SOURCE}auth/login`, {\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n    body: JSON.stringify({\"email\": email, \"password\": password})\r\n  })\r\n}\r\n\r\nexport const logOutRequest = () => {\r\n  return fetch(`${API_SOURCE}auth/logout`, {\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n    body: JSON.stringify({\"token\": localStorage.getItem('refreshToken') })\r\n  })\r\n}\r\n\r\nexport const getUserDataRequest = () => {\r\n  return fetch(`${API_SOURCE}auth/user`, {\r\n    method: 'GET',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      authorization: `Bearer ` + getCookie('accessToken')\r\n    },\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer'\r\n  })\r\n}\r\n\r\nexport const patchUserDataRequest = (payload: TPayloadUser) => {\r\n  return fetch(`${API_SOURCE}auth/user`, {\r\n    method: 'PATCH',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      authorization: `Bearer ` + getCookie('accessToken')\r\n    },\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n    body: JSON.stringify(payload)\r\n  })\r\n}\r\n\r\nexport const refreshTokenRequest = () => {\r\n  return fetch(`${API_SOURCE}auth/token`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\"token\": localStorage.getItem('refreshToken')})\r\n  })\r\n}","import { getResponseData } from \"../../utils/get-response-data\";\r\nimport { setCookie, deleteCookie } from \"../../utils/cookie\";\r\nimport { LIFE_OF_COOKIE_IN_MINUTES } from \"../../utils/constants\";\r\nimport { CLEAR_SELECTED_INGREDIENTS } from \"../actions/data-selected\";\r\nimport {\r\n  resetPasswordRequest,\r\n  restorePasswordRequest,\r\n  registrateRequest,\r\n  logInRequest,\r\n  logOutRequest,\r\n  getUserDataRequest,\r\n  patchUserDataRequest,\r\n  refreshTokenRequest\r\n} from \"../api\";\r\nimport { AppDispatch, AppThunk } from \"../types\";\r\nimport { TPayloadUser, TUser } from \"../types/data\";\r\n\r\nexport const LOG_IN_REQUEST: 'LOG_IN_REQUEST' = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS: 'LOG_IN_SUCCESS' = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILED: 'LOG_IN_FAILED' = 'LOG_IN_FAILED';\r\n\r\nexport const LOG_OUT_REQUEST: 'LOG_OUT_REQUEST' = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS: 'LOG_OUT_SUCCESS' = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILED: 'LOG_OUT_FAILED' = 'LOG_OUT_FAILED';\r\n\r\nexport const SIGN_IN_REQUEST: 'SIGN_IN_REQUEST' = 'SIGN_IN_REQUEST';\r\nexport const SIGN_IN_SUCCESS: 'SIGN_IN_SUCCESS' = 'SIGN_IN_SUCCESS';\r\nexport const SIGN_IN_FAILED: 'SIGN_IN_FAILED' = 'SIGN_IN_FAILED';\r\n\r\nexport const REFRESH_TOKEN_REQUEST: 'REFRESH_TOKEN_REQUEST' = 'REFRESH_TOKEN_REQUEST';\r\nexport const REFRESH_TOKEN_SUCCESS: 'REFRESH_TOKEN_SUCCESS' = 'REFRESH_TOKEN_SUCCESS';\r\nexport const REFRESH_TOKEN_FAILED: 'REFRESH_TOKEN_FAILED' = 'REFRESH_TOKEN_FAILED';\r\n\r\nexport const GET_USER_DATA_REQUEST: 'GET_USER_DATA_REQUEST' = 'GET_USER_DATA_REQUEST';\r\nexport const GET_USER_DATA_SUCCESS: 'GET_USER_DATA_SUCCESS' = 'GET_USER_DATA_SUCCESS';\r\nexport const GET_USER_DATA_FAILED: 'GET_USER_DATA_FAILED' = 'GET_USER_DATA_FAILED';\r\n\r\nexport const PATCH_USER_DATA_REQUEST: 'PATCH_USER_DATA_REQUEST' = 'PATCH_USER_DATA_REQUEST';\r\nexport const PATCH_USER_DATA_SUCCESS: 'PATCH_USER_DATA_SUCCESS' = 'PATCH_USER_DATA_SUCCESS';\r\nexport const PATCH_USER_DATA_FAILED: 'PATCH_USER_DATA_FAILED' = 'PATCH_USER_DATA_FAILED';\r\n\r\nexport const FORGOT_PASSWORD_REQUEST: 'FORGOT_PASSWORD_REQUEST' = 'FORGOT_PASSWORD_REQUEST';\r\nexport const FORGOT_PASSWORD_SUCCESS: 'FORGOT_PASSWORD_SUCCESS' = 'FORGOT_PASSWORD_SUCCESS';\r\nexport const FORGOT_PASSWORD_FAILED: 'FORGOT_PASSWORD_FAILED' = 'FORGOT_PASSWORD_FAILED';\r\n\r\nexport const RESTORE_PASSWORD_REQUEST: 'RESTORE_PASSWORD_REQUEST' = 'RESTORE_PASSWORD_REQUEST';\r\nexport const RESTORE_PASSWORD_SUCCESS: 'RESTORE_PASSWORD_SUCCESS' = 'RESTORE_PASSWORD_SUCCESS';\r\nexport const RESTORE_PASSWORD_FAILED: 'RESTORE_PASSWORD_FAILED' = 'RESTORE_PASSWORD_FAILED';\r\nexport const RESTORE_PASSWORD_RESET: 'RESTORE_PASSWORD_RESET' = 'RESTORE_PASSWORD_RESET';\r\n\r\nexport const USER_RESET: 'USER_RESET' = 'USER_RESET';\r\n\r\nexport interface ILoginAction {\r\n  readonly type: typeof LOG_IN_REQUEST;\r\n}\r\n\r\nexport interface ILoginFailedAction {\r\n  readonly type: typeof LOG_IN_FAILED;\r\n  readonly message: string;\r\n}\r\n\r\nexport interface ILoginSuccessAction {\r\n  readonly type: typeof LOG_IN_SUCCESS;\r\n}\r\n\r\nexport interface ILogoutAction {\r\n  readonly type: typeof LOG_OUT_REQUEST;\r\n}\r\n\r\nexport interface ILogoutFailedAction {\r\n  readonly type: typeof LOG_OUT_FAILED;\r\n}\r\n\r\nexport interface ILogoutSuccessAction {\r\n  readonly type: typeof LOG_OUT_SUCCESS;\r\n}\r\n\r\nexport interface ISigninAction {\r\n  readonly type: typeof SIGN_IN_REQUEST;\r\n}\r\n\r\nexport interface ISignFailedAction {\r\n  readonly type: typeof SIGN_IN_FAILED;\r\n  readonly message: string;\r\n}\r\n\r\nexport interface ISignSuccessAction {\r\n  readonly type: typeof SIGN_IN_SUCCESS;\r\n}\r\n\r\nexport interface IRefreshTokenAction {\r\n  readonly type: typeof REFRESH_TOKEN_REQUEST;\r\n}\r\n\r\nexport interface IRefreshTokenFailedAction {\r\n  readonly type: typeof REFRESH_TOKEN_FAILED;\r\n}\r\n\r\nexport interface IRefreshTokenSuccessAction {\r\n  readonly type: typeof REFRESH_TOKEN_SUCCESS;\r\n}\r\n\r\nexport interface IGetUserAction {\r\n  readonly type: typeof GET_USER_DATA_REQUEST;\r\n}\r\n\r\nexport interface IGetUserFailedAction {\r\n  readonly type: typeof GET_USER_DATA_FAILED;\r\n  readonly message: string;\r\n}\r\n\r\nexport interface IGetUserSuccessAction {\r\n  readonly type: typeof GET_USER_DATA_SUCCESS;\r\n  readonly user: TUser;\r\n}\r\n\r\nexport interface IPatchUserAction {\r\n  readonly type: typeof PATCH_USER_DATA_REQUEST;\r\n}\r\n\r\nexport interface IPatchUserFailedAction {\r\n  readonly type: typeof PATCH_USER_DATA_FAILED;\r\n  readonly message: string;\r\n}\r\n\r\nexport interface IPatchUserSuccessAction {\r\n  readonly type: typeof PATCH_USER_DATA_SUCCESS;\r\n  readonly user: TUser;\r\n}\r\n\r\nexport interface IForgotPasswordAction {\r\n  readonly type: typeof FORGOT_PASSWORD_REQUEST;\r\n}\r\n\r\nexport interface IForgotPasswordFailedAction {\r\n  readonly type: typeof FORGOT_PASSWORD_FAILED;\r\n}\r\n\r\nexport interface IForgotPasswordSuccessAction {\r\n  readonly type: typeof FORGOT_PASSWORD_SUCCESS;\r\n  readonly isForgotPassword: boolean;\r\n}\r\n\r\nexport interface IRestorePasswordAction {\r\n  readonly type: typeof RESTORE_PASSWORD_REQUEST;\r\n}\r\n\r\nexport interface IRestorePasswordFailedAction {\r\n  readonly type: typeof RESTORE_PASSWORD_FAILED;\r\n}\r\n\r\nexport interface IRestorePasswordSuccessAction {\r\n  readonly type: typeof RESTORE_PASSWORD_SUCCESS;\r\n  readonly isResetPassword: boolean;\r\n}\r\n\r\nexport interface IRestorePasswordResetFailedAction {\r\n  readonly type: typeof RESTORE_PASSWORD_RESET;\r\n}\r\n\r\nexport interface IUserReset {\r\n  readonly type: typeof USER_RESET;\r\n}\r\n\r\nexport interface IDefault {\r\n  readonly type: typeof undefined;\r\n}\r\n\r\nexport type TUserActions =\r\n  | ILoginAction\r\n  | ILoginFailedAction\r\n  | ILoginSuccessAction\r\n  | ILogoutAction\r\n  | ILogoutFailedAction\r\n  | ILogoutSuccessAction\r\n  | ISigninAction\r\n  | ISignFailedAction\r\n  | ISignSuccessAction\r\n  | IRefreshTokenAction\r\n  | IRefreshTokenFailedAction\r\n  | IRefreshTokenSuccessAction\r\n  | IGetUserAction\r\n  | IGetUserFailedAction\r\n  | IGetUserSuccessAction\r\n  | IPatchUserAction\r\n  | IPatchUserFailedAction\r\n  | IPatchUserSuccessAction\r\n  | IForgotPasswordAction\r\n  | IForgotPasswordFailedAction\r\n  | IForgotPasswordSuccessAction\r\n  | IRestorePasswordAction\r\n  | IRestorePasswordFailedAction\r\n  | IRestorePasswordSuccessAction\r\n  | IRestorePasswordResetFailedAction\r\n  | IUserReset\r\n  | IDefault;\r\n\r\nexport function resetPassword(email: string) {\r\n  return function(dispatch: AppDispatch) {\r\n    dispatch({\r\n      type: FORGOT_PASSWORD_REQUEST\r\n    });\r\n    resetPasswordRequest(email)\r\n      .then(getResponseData)\r\n      .then(res => {\r\n        localStorage.setItem('forgotPasswordSuccess', 'true');\r\n        dispatch({\r\n          type: FORGOT_PASSWORD_SUCCESS,\r\n          isForgotPassword: res.success\r\n        });\r\n      })\r\n      .catch(error => {\r\n        dispatch({\r\n          type: FORGOT_PASSWORD_FAILED\r\n        });\r\n      })\r\n  }\r\n}\r\n\r\nexport function restorePassword(password: string, code: string) {\r\n  return function(dispatch: AppDispatch) {\r\n    dispatch({\r\n      type: RESTORE_PASSWORD_REQUEST\r\n    });\r\n    restorePasswordRequest(password, code)\r\n      .then(getResponseData)\r\n      .then(res => {\r\n        dispatch({\r\n          type: RESTORE_PASSWORD_SUCCESS,\r\n          isResetPassword: res.success\r\n        });\r\n      })\r\n      .catch(error => {\r\n        dispatch({\r\n          type: RESTORE_PASSWORD_FAILED\r\n        });\r\n      })\r\n  }\r\n}\r\n\r\nexport function registrate(email: string, password: string, name: string, cb: Function) {\r\n  return function(dispatch: AppDispatch) {\r\n    dispatch({\r\n      type: SIGN_IN_REQUEST\r\n    });\r\n    registrateRequest(email, password, name)\r\n      .then(getResponseData)\r\n      .then(res => {\r\n        let authToken;\r\n        if (res.accessToken.indexOf('Bearer') === 0) {\r\n          authToken = res.accessToken.split('Bearer ')[1];\r\n        }\r\n        dispatch({\r\n          type: SIGN_IN_SUCCESS,\r\n        });\r\n        setCookie(\"accessToken\", authToken, LIFE_OF_COOKIE_IN_MINUTES);\r\n        localStorage.setItem('refreshToken', res.refreshToken);\r\n        cb();\r\n      })\r\n      .catch(error => {\r\n        dispatch({\r\n          type: SIGN_IN_FAILED,\r\n          message: error.message,\r\n        });\r\n      })\r\n  }\r\n}\r\n\r\nexport function logIn(email: string, password: string, cb: Function) {\r\n  return function(dispatch: AppDispatch) {\r\n    dispatch({\r\n      type: LOG_IN_REQUEST\r\n    });\r\n    logInRequest(email, password)\r\n      .then(getResponseData)\r\n      .then(res => {\r\n        let authToken;\r\n        if (res.accessToken.indexOf('Bearer') === 0) {\r\n          authToken = res.accessToken.split('Bearer ')[1];\r\n        }\r\n        dispatch({\r\n          type: LOG_IN_SUCCESS,\r\n        });\r\n        setCookie(\"accessToken\", authToken, LIFE_OF_COOKIE_IN_MINUTES);\r\n        localStorage.setItem('refreshToken', res.refreshToken);\r\n        cb();\r\n      })\r\n      .catch(error => {\r\n        dispatch({\r\n          type: LOG_IN_FAILED,\r\n          message: error.message\r\n        });\r\n      });\r\n  }\r\n}\r\n\r\nexport function logOut() {\r\n  return function(dispatch: AppDispatch) {\r\n    dispatch({\r\n      type: LOG_OUT_REQUEST\r\n    });\r\n    logOutRequest()\r\n      .then(getResponseData)\r\n      .then(res => {\r\n        deleteCookie(\"accessToken\");\r\n        localStorage.removeItem('refreshToken');\r\n        dispatch({\r\n          type: LOG_OUT_SUCCESS,\r\n        });\r\n        dispatch({\r\n          type: CLEAR_SELECTED_INGREDIENTS,\r\n        })\r\n      })\r\n      .catch(error => {\r\n        dispatch({\r\n          type: LOG_OUT_FAILED\r\n        });\r\n      })\r\n  }\r\n}\r\n\r\nexport const getUserData: AppThunk = function () {\r\n  return function(dispatch: AppDispatch | AppThunk) {\r\n    dispatch({\r\n      type: GET_USER_DATA_REQUEST\r\n    });\r\n    getUserDataRequest()\r\n      .then(getResponseData)\r\n      .then(res => {\r\n        dispatch({\r\n          type: GET_USER_DATA_SUCCESS,\r\n          user: res.user\r\n        });\r\n      })\r\n      .catch(error => {\r\n        if (error.message === \"jwt malformed\") {\r\n          dispatch(refreshToken(getUserData()))\r\n        } else {\r\n          dispatch({\r\n            type: GET_USER_DATA_FAILED,\r\n            message: error.message,\r\n          });\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\nexport const patchUserData: AppThunk = function (payload: TPayloadUser) {\r\n  return function(dispatch: AppDispatch | AppThunk) {\r\n    dispatch({\r\n      type: PATCH_USER_DATA_REQUEST\r\n    });\r\n    patchUserDataRequest(payload)\r\n      .then(getResponseData)\r\n      .then(res => {\r\n        dispatch({\r\n          type: PATCH_USER_DATA_SUCCESS,\r\n          user: res.user\r\n        });\r\n      })\r\n      .catch(error => {\r\n        if (error.message === \"jwt malformed\") {\r\n          dispatch(refreshToken(getUserData()))\r\n        } else {\r\n          dispatch({\r\n            type: PATCH_USER_DATA_FAILED,\r\n            message: error.message,\r\n          });\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\nexport const refreshToken: AppThunk = function (afterRefresh: Function) {\r\n  return function(dispatch: AppDispatch) {\r\n    dispatch({\r\n      type: REFRESH_TOKEN_REQUEST\r\n    });\r\n    refreshTokenRequest()\r\n      .then(getResponseData)\r\n      .then(res => {\r\n        let authToken;\r\n        if (res.accessToken.indexOf('Bearer') === 0) {\r\n          authToken = res.accessToken.split('Bearer ')[1];\r\n        }\r\n        dispatch({\r\n          type: REFRESH_TOKEN_SUCCESS\r\n        });\r\n        localStorage.setItem('refreshToken', res.refreshToken);\r\n        setCookie('accessToken', authToken, LIFE_OF_COOKIE_IN_MINUTES);\r\n        dispatch(afterRefresh());\r\n      })\r\n      .catch(error => {\r\n        dispatch({\r\n          type: REFRESH_TOKEN_FAILED\r\n        });\r\n      })\r\n  }\r\n}","function getTextFormat(number: number, textForms: string[]) {\r\n  number = Math.abs(number) % 100; \r\n  const n1 = number % 10;\r\n  if (number > 10 && number < 20) { return textForms[2]; }\r\n  if (n1 > 1 && n1 < 5) { return textForms[1]; }\r\n  if (n1 == 1) { return textForms[0]; }\r\n  return textForms[2];\r\n}\r\n\r\nexport const getDate = (createdAt: string) => {\r\n  const options: Intl.DateTimeFormatOptions = {\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n    timeZone: 'Europe/Moscow'\r\n  };\r\n  const dateTime = Date.parse(createdAt);\r\n  const date = new Date(dateTime);\r\n  const currentDate = new Date();\r\n  const day = (currentDate.getUTCDate() - date.getUTCDate()) === 0\r\n    ? 'Сегодня' :\r\n    (currentDate.getUTCDate() - date.getUTCDate()) === 1\r\n      ? 'Вчера' :\r\n      `${currentDate.getUTCDate() - date.getUTCDate()} \r\n       ${getTextFormat(currentDate.getUTCDate() - date.getUTCDate(), ['день', 'дня', 'дней'])} назад`\r\n    ;\r\n  const hours = date.toLocaleString('ru', options);\r\n  return `${day}, ${hours} i-GMT+3`;\r\n}","import { getDate } from './get-date';\r\nimport { TIngredient, TOrder } from '../services/types/data';\r\n\r\nconst saveIngredient = (ingredient: TIngredient, id: string, count: number) => {\r\n  \r\n  const newItem = {\r\n    \"id\": id,\r\n    \"count\": count,\r\n    \"name\": ingredient.name,\r\n    \"image\": ingredient.image_mobile,\r\n    \"price\": ingredient.price\r\n  };\r\n\r\n  return newItem\r\n}\r\n\r\nconst getIngredient = (data: Array<TIngredient>, id: string, count: number, cb: Function) => {\r\n  const soughtArray =  [...data].filter(item => item._id === id);\r\n  if (soughtArray && soughtArray.length) {\r\n    return cb(soughtArray[0], id, count);\r\n  }\r\n};\r\n\r\nexport const processIngredients = (data: Array<TIngredient>, ingredients: Array<string>) => {\r\n  type TIngr = {[ingredientID in string]: number};\r\n  let tIngr: TIngr = {};\r\n  \r\n  const ingredietnsWithCount: TIngr = (ingredients.reduce((count, ingredientID) => {\r\n    count[ingredientID] = (count[ingredientID] || 0) + 1;\r\n    return tIngr\r\n  }, tIngr\r\n));\r\n\r\n  const newIngredients = [];\r\n  \r\n  for (const ingredientID of Object.keys(ingredietnsWithCount)) {\r\n    \r\n    const newItem = getIngredient(data, ingredientID, ingredietnsWithCount[ingredientID], saveIngredient);\r\n    newIngredients.push(newItem);\r\n  }\r\n\r\n  return newIngredients;\r\n}\r\n\r\nexport const processOrders =\r\n  (data: Array<TIngredient>, orders: Array<TOrder>, updatingState: string) => {\r\n  \r\n  orders = orders.filter((item) => !item.isUpdateOrder);\r\n  \r\n  for (const order of orders) {\r\n    const { ingredients } = order;\r\n    if (ingredients && ingredients.length) {\r\n      const newIngredients = processIngredients(data, ingredients as Array<string>);\r\n      const date = getDate(order.createdAt);\r\n    const updateOrder = {\r\n      ...order,\r\n      createdAt: date,\r\n      ingredients: newIngredients,\r\n      isUpdateOrder: true\r\n    };\r\n\r\n    return updateOrder;\r\n    // if (updateOrder && newIngredients.length && updatingState === 'ws') {\r\n    //   dispatch({\r\n    //     type: WS_UPDATE_ORDER,\r\n    //     updateOrder\r\n    //   })\r\n    // } else if ( updateOrder && newIngredients.length && updatingState === 'wsUser' ) {\r\n    //   dispatch({\r\n    //     type: WS_USER_UPDATE_ORDER,\r\n    //     updateOrder\r\n    //   })\r\n    // } else if ( updateOrder && newIngredients.length && updatingState === 'orderInfo' ) {\r\n    //   dispatch({\r\n    //     type: UPDATE_ORDER_INFO,\r\n    //     updateOrder\r\n    //   })\r\n    // }\r\n    };\r\n    \r\n  }\r\n}","import { TOrder } from '../types/data';\r\n\r\nexport const WS_CONNECTION_START: 'WS_CONNECTION_START' = 'WS_CONNECTION_START';\r\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\r\nexport const WS_CONNECTION_FAILED: 'WS_CONNECTION_FAILED' = 'WS_CONNECTION_FAILED';\r\nexport const WS_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED' = 'WS_CONNECTION_CLOSED';\r\nexport const WS_GET_MESSAGE: 'WS_GET_MESSAGE' = 'WS_GET_MESSAGE';\r\nexport const WS_UPDATE_ORDER: 'WS_UPDATE_ORDER' = 'WS_UPDATE_ORDER';\r\n\r\nexport const WS_USER_CONNECTION_START: 'WS_USER_CONNECTION_START' = 'WS_USER_CONNECTION_START';\r\nexport const WS_USER_CONNECTION_SUCCESS: 'WS_USER_CONNECTION_SUCCESS' = 'WS_USER_CONNECTION_SUCCESS';\r\nexport const WS_USER_CONNECTION_FAILED: 'WS_USER_CONNECTION_FAILED' = 'WS_USER_CONNECTION_FAILED';\r\nexport const WS_USER_CONNECTION_CLOSED: 'WS_USER_CONNECTION_CLOSED' = 'WS_USER_CONNECTION_CLOSED';\r\nexport const WS_USER_GET_MESSAGE: 'WS_USER_GET_MESSAGE' = 'WS_USER_GET_MESSAGE';\r\nexport const WS_USER_UPDATE_ORDER: 'WS_USER_UPDATE_ORDER' = 'WS_USER_UPDATE_ORDER';\r\n\r\nexport interface IWsConnectionStart {\r\n  readonly type: typeof WS_CONNECTION_START;\r\n  readonly wsConnectionRequest: boolean;\r\n}\r\n\r\nexport interface IWsConnectionSuccess {\r\n  readonly type: typeof WS_CONNECTION_SUCCESS;\r\n  readonly wsConnected: boolean;\r\n}\r\n\r\nexport interface IWsConnectionFailed {\r\n  readonly type: typeof WS_CONNECTION_FAILED;\r\n  readonly wsConnected: boolean;\r\n}\r\n\r\nexport interface IWsConnectionClosed {\r\n  readonly type: typeof WS_CONNECTION_CLOSED;\r\n  readonly wsConnected: boolean;\r\n}\r\n\r\nexport interface IWsGetMessage {\r\n  readonly type: typeof WS_GET_MESSAGE;\r\n  readonly payload: { total: number, totalToday: number, orders: TOrder[] };\r\n}\r\n\r\nexport interface IWsUpdateOrder {\r\n  readonly type: typeof WS_UPDATE_ORDER;\r\n  readonly updateOrder: TOrder;\r\n}\r\n\r\nexport type TWsActions =\r\n  | IWsConnectionStart\r\n  | IWsConnectionSuccess\r\n  | IWsConnectionFailed\r\n  | IWsConnectionClosed\r\n  | IWsGetMessage\r\n  | IWsUpdateOrder\r\n  | IDefault;\r\n\r\n  export interface IWsUserConnectionStart {\r\n    readonly type: typeof WS_USER_CONNECTION_START;\r\n    readonly wsConnectionRequest: boolean;\r\n  }\r\n  \r\n  export interface IWsUserConnectionSuccess {\r\n    readonly type: typeof WS_USER_CONNECTION_SUCCESS;\r\n    readonly wsConnected: boolean;\r\n  }\r\n  \r\n  export interface IWsUserConnectionFailed {\r\n    readonly type: typeof WS_USER_CONNECTION_FAILED;\r\n    readonly wsConnected: boolean;\r\n  }\r\n  \r\n  export interface IWsUserConnectionClosed {\r\n    readonly type: typeof WS_USER_CONNECTION_CLOSED;\r\n    readonly wsConnected: boolean;\r\n  }\r\n  \r\n  export interface IWsUserGetMessage {\r\n    readonly type: typeof WS_USER_GET_MESSAGE;\r\n    readonly payload: { total: number, totalToday: number, orders: TOrder[] };\r\n  }\r\n\r\n  export interface IWsUserUpdateOrder {\r\n    readonly type: typeof WS_USER_UPDATE_ORDER;\r\n    readonly updateOrder: TOrder;\r\n  }\r\n\r\n  export interface IDefault {\r\n    readonly type: typeof undefined;\r\n  }\r\n\r\n  export type TWsUserActions =\r\n    | IWsUserConnectionStart\r\n    | IWsUserConnectionSuccess\r\n    | IWsUserConnectionFailed\r\n    | IWsUserConnectionClosed\r\n    | IWsUserGetMessage\r\n    | IWsUserUpdateOrder\r\n    | IDefault;","import { FC, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from '../services/hooks';\r\n\r\nimport NavItem from \"../components/nav-item\";\r\nimport Menu from \"../components/menu\";\r\nimport styles from \"./profile.module.css\";\r\nimport { logOut } from '../services/actions/user';\r\nimport { processOrders } from '../utils/process-orders';\r\nimport { \r\n  WS_USER_CONNECTION_START,\r\n  WS_USER_CONNECTION_CLOSED,\r\n  WS_USER_UPDATE_ORDER\r\n} from '../services/actions/ws';\r\n\r\ntype TProfileProps = {\r\n  children: React.ReactNode,\r\n  textInfo: string\r\n}\r\n\r\nexport const ProfilePage: FC<TProfileProps> = ({ children, textInfo }) => {\r\n  const dispatch = useDispatch();\r\n  const { data, orders } = useSelector((store) => ({\r\n    data: store.data.data,\r\n    orders: store.wsUser.orders\r\n  }));\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch({\r\n        type: WS_USER_CONNECTION_START\r\n      });\r\n\r\n      return () => {\r\n        dispatch({\r\n          type: WS_USER_CONNECTION_CLOSED\r\n        });\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  useEffect(() =>{\r\n    async function getOrder() {\r\n      const ordersNoUpdating = orders.filter(item => !item.isUpdateOrder);\r\n      if (orders && orders.length !== 0 && ordersNoUpdating.length !== 0) {\r\n        const updateOrder = await processOrders(data, ordersNoUpdating, 'wsUser');\r\n        if ( updateOrder && updateOrder.ingredients ) {\r\n            dispatch({\r\n              type: WS_USER_UPDATE_ORDER,\r\n              updateOrder\r\n            })\r\n        }\r\n      };\r\n    };\r\n    getOrder();\r\n  },\r\n    [orders]\r\n  );\r\n\r\n  const handleClick = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    dispatch(logOut());\r\n  }\r\n\r\n  return (\r\n    <section className={`pt-30 ${styles.section}`}>\r\n      <div className={ `mr-15 ${styles.left_column}` }>\r\n        <aside>\r\n          <Menu\r\n              style=\"column\"\r\n              children={[\r\n                {\r\n                  text: \"Профиль\",\r\n                  link: \"/profile\"\r\n                },\r\n                {\r\n                  text: \"История заказов\",\r\n                  link: \"/profile/orders\"\r\n                },\r\n                {\r\n                  text: \"Выход\",\r\n                  link: \"/login\",\r\n                  onClickFunction: handleClick\r\n                }\r\n              ]\r\n              .map((item, index) =>\r\n                <li\r\n                  className={`${styles.wrapper_item}`}\r\n                  key={`menu${index}`}\r\n                >\r\n                  {!item.onClickFunction ? (\r\n                    <NavItem\r\n                      link={item.link}\r\n                    >\r\n                      <span>{item.text}</span>\r\n                    </NavItem>\r\n                  ) : (\r\n                    <button\r\n                      className={`text text_type_main-medium text_color_inactive &{styles.menu_item}`}\r\n                      onClick={item.onClickFunction}\r\n                    >\r\n                      {item.text}\r\n                    </button>\r\n                  )}\r\n                </li>\r\n              )\r\n            }\r\n          />\r\n        </aside>\r\n        <p className=\"mt-20 text text_type_main-default text_color_inactive\">\r\n          {textInfo}\r\n        </p>\r\n      </div>\r\n      {children}\r\n    </section>\r\n  )\r\n}","import { FormWrapper } from './form-wrapper';\r\n\r\nexport default FormWrapper;","import { FC, ReactNode, UIEvent } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport styles from './form-wrapper.module.css';\r\n\r\ntype TFormWrapper = {\r\n  actionFunc: Function | undefined,\r\n  children: ReactNode,\r\n  title?: string,\r\n  validateFunc: Function | undefined,\r\n}\r\n\r\nexport const FormWrapper: FC<TFormWrapper> = ({ actionFunc, children, title, validateFunc }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (e: UIEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (actionFunc) {\r\n      dispatch(actionFunc);\r\n    }\r\n    else if (validateFunc) {\r\n      validateFunc();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={ styles.wrapper }>\r\n      <div className={ styles.container }>\r\n        {title ? <h1 className=\"text text_type_main-medium mb-6\">{title}</h1> : null}\r\n        <form className={ styles.form } onSubmit={onSubmit}>\r\n          {children}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { SpanWithLink } from './span-with-link';\r\n\r\nexport default SpanWithLink;","import { FC, useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport styles from './span-with-link.module.css';\r\n\r\ntype TSpanWithLinkProps = {\r\n  buttonText: string,\r\n  link: string,\r\n  spanText: string,\r\n  mb: string\r\n}\r\n\r\nexport const SpanWithLink: FC<TSpanWithLinkProps> = ({ buttonText, link, spanText, mb }) => {\r\n  const history = useHistory();\r\n\r\n  const goToLink = useCallback(\r\n    () => {\r\n        history.replace({ pathname: link });\r\n    },\r\n    [history, link]\r\n  );\r\n\r\n  return (\r\n    <p className={`mb-${ mb } ${ styles.link }`}>\r\n      <span className=\"text text_type_main-default text_color_inactive mr-2\">\r\n        { spanText }\r\n      </span>\r\n      <Button type=\"secondary\" size=\"medium\" onClick={ goToLink }>\r\n        { buttonText }\r\n      </Button>\r\n    </p>\r\n  )\r\n}\r\n","import { LoginForm } from './login-form';\r\n\r\nexport default LoginForm;","import { useState } from 'react';\r\nimport { useSelector } from '../../services/hooks';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport { Button, EmailInput, PasswordInput } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport FormWrapper from '../form-wrapper';\r\nimport SpanWithLink from '../span-with-link';\r\nimport { logIn } from '../../services/actions/user';\r\n\r\nexport const LoginForm = () => {\r\n  const { logInFailed, logInFailedMessage } = useSelector((state) => ({\r\n    logInFailed: state.user.logInFailed,\r\n    logInFailedMessage: state.user.logInFailedMessage\r\n  }))\r\n  interface LocationState {\r\n    from: {\r\n      pathname: string;\r\n    };\r\n  }\r\n  const history = useHistory();\r\n  const location = useLocation<LocationState>();\r\n\r\n  const [state, setState] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const handleInputChange: React.ChangeEventHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const target = e.target;\r\n    setState({\r\n      ...state,\r\n      [target.name]: target.value\r\n    });\r\n  }\r\n\r\n  const { from } = (location.state) || { from: { pathname: \"/\" } };\r\n  const cb = () => {\r\n    history.replace(from);\r\n  };\r\n\r\n  return (\r\n    <FormWrapper\r\n      title=\"Вход\"\r\n      actionFunc={logIn(state.email, state.password, cb)}\r\n      validateFunc={undefined}\r\n    >\r\n      <div className=\"mb-6\">\r\n        <EmailInput\r\n          onChange={handleInputChange}\r\n          value={state.email}\r\n          name={'email'}\r\n        />\r\n      </div>\r\n      <div className=\"mb-6\">\r\n        <PasswordInput\r\n          onChange={handleInputChange}\r\n          value={state.password}\r\n          name={'password'}\r\n        />\r\n      </div>\r\n      {logInFailed && logInFailedMessage !== '' ? \r\n        <p className=\"text text_type_main-medium text_color_inactive mb-5\">\r\n          {logInFailedMessage.charAt(0).toUpperCase() + logInFailedMessage.slice(1)}\r\n        </p>\r\n        :\r\n        <></>\r\n      }\r\n      <div className=\"mb-20\">\r\n        <Button type=\"primary\" size=\"medium\">\r\n          Войти\r\n        </Button>\r\n      </div>\r\n      <SpanWithLink\r\n        buttonText=\"Зарегистрироваться\"\r\n        link=\"/register\"\r\n        spanText=\"Вы — новый пользователь?\"\r\n        mb=\"4\"\r\n      />\r\n      <SpanWithLink\r\n        buttonText=\"Восстановить пароль\"\r\n        link=\"/forgot-password\"\r\n        spanText=\"Забыли пароль?\"\r\n        mb=\"0\"\r\n      />\r\n    </FormWrapper>\r\n  )\r\n}","import { useSelector } from '../services/hooks';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport LoginForm from '../components/login-form';\r\nimport styles from './login.module.css';\r\n\r\nexport const LoginPage = () => {\r\n  const {isLoggedIn } = useSelector((state) => ({\r\n    isLoggedIn: state.user.isLoggedIn\r\n  }));\r\n  \r\n  if (isLoggedIn) {\r\n    return (\r\n      <Redirect to={{ pathname: '/' }} />\r\n    )\r\n  } else {\r\n    return (\r\n      <div className={ styles.wrapper }>\r\n        <div className={ styles.content }>\r\n          <LoginForm />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import { RegistrationForm } from './registration-form';\r\n\r\nexport default RegistrationForm;","import { useState } from 'react';\r\nimport { useSelector } from '../../services/hooks';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport {\r\n  Button,\r\n  Input,\r\n  EmailInput,\r\n  PasswordInput\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport FormWrapper from '../form-wrapper';\r\nimport SpanWithLink from '../span-with-link';\r\nimport { registrate } from '../../services/actions/user';\r\n\r\nexport const RegistrationForm = () => {\r\n  const { registrateFailed, registrateFailedMessage } = useSelector((state) => ({\r\n    registrateFailed: state.user.registrateFailed,\r\n    registrateFailedMessage: state.user.registrateFailedMessage,\r\n  }));\r\n  interface LocationState {\r\n    from: {\r\n      pathname: string;\r\n    };\r\n  }\r\n  const history = useHistory();\r\n  const location = useLocation<LocationState>();\r\n\r\n  type TUserState = {\r\n    name: string,\r\n    email: string,\r\n    password: string,\r\n  }\r\n\r\n  const [state, setState] = useState<TUserState>({\r\n    name: '',\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const handleInputChange: React.ChangeEventHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const target = e.target;\r\n    setState({\r\n      ...state,\r\n      [target.name]: target.value\r\n    });\r\n  }\r\n\r\n  const { from } = (location.state) || { from: { pathname: \"/\" } };\r\n  const cb = () => {\r\n    history.replace(from);\r\n  };\r\n\r\n  return (\r\n    <FormWrapper\r\n      title=\"Вход\"\r\n      actionFunc={registrate(state.email, state.password, state.name, cb)}\r\n      validateFunc={undefined}\r\n    >\r\n      <div className=\"mb-6\">\r\n        <Input\r\n          type={'text'}\r\n          placeholder={'Имя'}\r\n          onChange={handleInputChange}\r\n          value={state.name}\r\n          name={'name'}\r\n          error={false}\r\n          errorText={''}\r\n          size={'default'}\r\n        />\r\n      </div>\r\n      <div className=\"mb-6\">\r\n        <EmailInput\r\n          onChange={handleInputChange}\r\n          value={state.email}\r\n          name={'email'}\r\n        />\r\n      </div>\r\n      <div className=\"mb-6\">\r\n        <PasswordInput\r\n          onChange={handleInputChange}\r\n          value={state.password}\r\n          name={'password'}\r\n        />\r\n      </div>\r\n      {registrateFailed && registrateFailedMessage !== '' ? \r\n        <p className=\"text text_type_main-medium text_color_inactive mb-5\">\r\n          {registrateFailedMessage.charAt(0).toUpperCase() + registrateFailedMessage.slice(1)}\r\n        </p>\r\n        :\r\n        <></>\r\n      }\r\n      <div className=\"mb-20\">\r\n        <Button type=\"primary\" size=\"medium\">\r\n          Зарегистрироваться\r\n        </Button>\r\n      </div>\r\n      <SpanWithLink\r\n        buttonText=\"Войти\"\r\n        link=\"/login\"\r\n        spanText=\"Уже зарегистрированы?\"\r\n        mb=\"0\"\r\n      />\r\n    </FormWrapper>\r\n  )\r\n}","import RegistrationForm from \"../components/registration-form\";\r\nimport styles from './login.module.css';\r\n\r\nexport const RegistrationPage = () => {\r\n  return (\r\n    <div className={ styles.wrapper }>\r\n      <div className={ styles.content }>\r\n        <RegistrationForm />\r\n      </div>\r\n    </div>\r\n  )\r\n}","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from '../services/hooks';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { Button, Input } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport FormWrapper from '../components/form-wrapper';\r\nimport SpanWithLink from '../components/span-with-link';\r\nimport { resetPassword } from '../services/actions/user';\r\nimport Preloader from '../components/preloader';\r\nimport { validateEmail } from '../utils/validate-email';\r\nimport styles from './login.module.css';\r\n\r\nexport const ForgotPasswordPage = () => {\r\n  const { forgotPasswordRequest } = useSelector((state) => ({\r\n    forgotPasswordRequest: state.user.forgotPasswordRequest\r\n  }));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [state, setState] = useState({\r\n    email: ''\r\n  });\r\n\r\n  const [errorText, setErrorText] = useState('');\r\n\r\n  const handleInputChange: React.ChangeEventHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const target = e.target;\r\n    setState({\r\n      ...state,\r\n      [target.name]: target.value\r\n    });\r\n  }\r\n\r\n  const validate = () => {\r\n    if (validateEmail((state.email))) {\r\n      dispatch(resetPassword(state.email));\r\n    }\r\n    else {\r\n      setErrorText('Введите корректный email')\r\n    }\r\n  }\r\n\r\n  if (localStorage.getItem('forgotPasswordSuccess')) {\r\n    return (\r\n      <Redirect to={{ pathname: '/reset-password' }} />\r\n    )\r\n  }\r\n\r\n  return (\r\n    forgotPasswordRequest ?\r\n      (<Preloader />)\r\n    :\r\n      (<div className={ styles.wrapper }>\r\n        <div className={ styles.content }>\r\n          <FormWrapper\r\n            title=\"Восстановление пароля\"\r\n            validateFunc={validate}\r\n            actionFunc={undefined}\r\n          >\r\n            <div className=\"mb-6\">\r\n              <Input\r\n                type={'email'}\r\n                placeholder={'Укажите e-mail'}\r\n                onChange={handleInputChange}\r\n                value={state.email}\r\n                name={'email'}\r\n                error={errorText === '' ? false : true}\r\n                errorText={errorText}\r\n                size={'default'}\r\n              />\r\n            </div>\r\n            <div className=\"mb-20\">\r\n              <Button type=\"primary\" size=\"medium\">\r\n                Восстановить\r\n              </Button>\r\n            </div>\r\n            <SpanWithLink\r\n              buttonText=\"Войти\"\r\n              link=\"/login\"\r\n              spanText=\"Вспомнили пароль?\"\r\n              mb=\"0\"\r\n            />\r\n          </FormWrapper>\r\n        </div>\r\n      </div>)\r\n  )\r\n}","export function validateEmail(email: string) {\r\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n}","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from '../services/hooks';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { Button, Input } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport FormWrapper from '../components/form-wrapper';\r\nimport SpanWithLink from '../components/span-with-link';\r\nimport { restorePassword, RESTORE_PASSWORD_RESET } from '../services/actions/user';\r\nimport styles from './login.module.css';\r\n\r\nexport const ResetPasswordPage = () => {\r\n  const dispatch = useDispatch();\r\n  const { isResetPassword } = useSelector((state) => ({\r\n    isResetPassword: state.user.isResetPassword\r\n  }))\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({\r\n        type: RESTORE_PASSWORD_RESET\r\n      })\r\n    }\r\n  }, []);\r\n\r\n  const [state, setState] = useState({\r\n    newPassword: '',\r\n    code: ''\r\n  });\r\n\r\n  const [iconValue, setIcon] = useState('ShowIcon');\r\n\r\n  const handleInputChange: React.ChangeEventHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const target = e.target;\r\n    setState({\r\n      ...state,\r\n      [target.name]: target.value\r\n    });\r\n  }\r\n\r\n  const onIconClick = (e: React.MouseEvent) => {\r\n    setIcon(iconValue === 'ShowIcon' ? 'HideIcon' : 'ShowIcon');\r\n  }\r\n  \r\n  if (!localStorage.getItem('forgotPasswordSuccess') && !isResetPassword) {\r\n    return (\r\n      <Redirect to={{ pathname: '/forgot-password' }} />\r\n    )\r\n  }\r\n\r\n  if (isResetPassword) {\r\n    localStorage.removeItem('forgotPasswordSuccess');\r\n    return (\r\n      <Redirect to={{ pathname: '/login' }} />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={ styles.wrapper }>\r\n      <div className={ styles.content }>\r\n        <FormWrapper\r\n          title=\"Восстановление пароля\"\r\n          actionFunc={restorePassword(state.newPassword, state.code)}\r\n          validateFunc={undefined}\r\n        >\r\n          <div className=\"mb-6\">\r\n            <Input\r\n              type={iconValue === 'ShowIcon' ? 'password' : 'text'}\r\n              placeholder={'Введите новый пароль'}\r\n              onChange={handleInputChange}\r\n              value={state.newPassword}\r\n              name={'newPassword'}\r\n              error={false}\r\n              onIconClick={onIconClick}\r\n              errorText={''}\r\n              size={'default'}\r\n            />\r\n          </div>\r\n          <div className=\"mb-6\">\r\n            <Input\r\n              type={'text'}\r\n              placeholder={'Введите код из письма'}\r\n              onChange={handleInputChange}\r\n              value={state.code}\r\n              name={'code'}\r\n              error={false}\r\n              onIconClick={onIconClick}\r\n              errorText={''}\r\n              size={'default'}\r\n            />\r\n          </div>\r\n          <div className=\"mb-20\">\r\n            <Button type=\"primary\" size=\"medium\">\r\n              Сохранить\r\n            </Button>\r\n          </div>\r\n          <SpanWithLink\r\n            buttonText=\"Войти\"\r\n            link=\"/login\"\r\n            spanText=\"Вспомнили пароль?\"\r\n            mb=\"0\"\r\n          />\r\n        </FormWrapper>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { FC } from 'react';\r\n\r\nimport styles from './ingredient-details.module.css';\r\nimport { TIngredient } from '../../services/types/data';\r\n\r\ntype TFeature = {\r\n  id: number,\r\n  name: string,\r\n  measure: string,\r\n  valueName: keyof TIngredient\r\n}\r\n\r\nexport const productFeatures: TFeature[] = [\r\n  {\r\n    id: 0,\r\n    name: 'Калории',\r\n    measure: 'ккал',\r\n    valueName: 'calories'\r\n  },\r\n  {\r\n    id: 1,\r\n    name: 'Белки',\r\n    measure: 'г',\r\n    valueName: 'proteins'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Жиры',\r\n    measure: 'г',\r\n    valueName: 'fat'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Углеводы',\r\n    measure: 'г',\r\n    valueName: 'carbohydrates'\r\n  },\r\n];\r\n\r\ntype TFeatureProps = {\r\n  name: string,\r\n  measure: string,\r\n  value: string | number\r\n};\r\n\r\nexport const Feature: FC<TFeatureProps> = ({ name, measure, value }) => {\r\n  return (\r\n    <li className='text text_type_main-default text_color_inactive'>\r\n      <div className={`${styles.feature_row}`}>\r\n        <span>{`${name},`}</span>\r\n        <span>{measure}</span>\r\n      </div>\r\n      <span>{value}</span>\r\n    </li>\r\n  )\r\n}\r\n\r\ntype TListOfFeaturesProps = React.ReactNode;\r\n\r\nexport const ListOfFeatures: FC<TListOfFeaturesProps> = ({ children }) => {console.log(children);\r\n  return (\r\n    <ul className={styles.features}>\r\n      {children}\r\n    </ul>\r\n  );\r\n}\r\n\r\n","import IngredientDetails from \"./ingredient-details\";\r\nexport default IngredientDetails;","import { useEffect, useState } from 'react';\r\nimport { useSelector } from '../../services/hooks';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { productFeatures, Feature, ListOfFeatures } from './feature';\r\nimport Preloader from '../preloader';\r\nimport { TIngredientInUpdateOrder, TIngredient } from '../../services/types/data';\r\n\r\nconst IngredientDetails = () => {\r\n  const { data } = useSelector((state) => ({\r\n    data: state.data.data\r\n  }));\r\n\r\n  const { ingredientId } = useParams<{ingredientId: string}>();\r\n  const [ingredientData, setIngredientData] = useState<TIngredient | null>(null);\r\n  const [error, setError] = useState<boolean>(false);\r\n\r\n  const getIngredientInfo = async () => {\r\n    return await [...data].filter(item => item._id === ingredientId);\r\n  }\r\n\r\n  useEffect( () => {\r\n    async function getIngredient() {\r\n      let soughtIngredient: TIngredient[] | null = null;\r\n      let ingredientDataValue: TIngredient | null = null;\r\n      let errorValue = false;\r\n\r\n      if (data.length) {\r\n        soughtIngredient = await getIngredientInfo();\r\n\r\n        if (soughtIngredient && soughtIngredient.length) {\r\n          ingredientDataValue = soughtIngredient[0];\r\n        } else {errorValue = true};\r\n      }\r\n      \r\n      setIngredientData(ingredientDataValue);\r\n      setError(errorValue);\r\n    };\r\n    getIngredient();\r\n  },\r\n    [ingredientId, data]\r\n  );\r\n\r\n  function getProperty<T, K extends keyof T>(obj: T, key: K) {\r\n    return obj[key];\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      {error ? (\r\n          <p className='text text_type_main-medium text_color_inactive mt-8'>Ингредиент с таким ID не найден</p>\r\n        ) : (\r\n          ingredientData === null ? (\r\n            <Preloader />\r\n          ) : (\r\n          <>\r\n            <img\r\n              src={ingredientData.image_large}\r\n              alt={ingredientData.name}\r\n              className=\"mb-4\"\r\n              width=\"520\"\r\n              height=\"240\"\r\n            />\r\n            <h3 className='text text_type_main-medium mb-8'>{ingredientData.name}</h3>\r\n            <ListOfFeatures>\r\n              {productFeatures\r\n              .map( item => \r\n                <Feature\r\n                  key={item.id}\r\n                  name={item.name}\r\n                  measure={item.measure}\r\n                  value={getProperty(ingredientData, item.valueName)}\r\n                />\r\n              )}\r\n            </ListOfFeatures>\r\n          </>\r\n          )\r\n        )\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default IngredientDetails;","import IngredientDetails from '../components/ingredient-details';\r\nimport styles from './ingredient.module.css';\r\n\r\nexport const IngredientPage = () => {\r\n  \r\n  return (\r\n    <div className={ styles.wrapp }>\r\n      <div className={ styles.content }>\r\n        <h2 className=\"text text_type_main-large\">\r\n          Детали ингредиента\r\n        </h2>\r\n        <IngredientDetails />\r\n      </div>\r\n    </div>\r\n  )\r\n}","import { Column } from './column';\r\n\r\nexport default Column;","import { FC, useMemo } from 'react';\r\n\r\nimport Preloader from '../preloader';\r\nimport styles from './column.module.css';\r\n\r\ntype TColumnProps = {\r\n  children: React.ReactNode,\r\n  request: boolean,\r\n  requestFailed: boolean,\r\n  title?: string | null,\r\n  type: string,\r\n}\r\n\r\nexport const Column: FC<TColumnProps> = ({ children, request, requestFailed, title, type }) => {\r\n  const content = useMemo(\r\n    () => {\r\n      return request ? (\r\n        <Preloader />\r\n      ) : (\r\n        requestFailed ? (\r\n          <div className=\"text text_type_main-large\">Произошла ошибка. Перезагрузите браузер.</div>\r\n        ) : (\r\n          <>\r\n            {type === \"right\" ? (\r\n              <>\r\n                <h2 className='text text_type_main-large pb-5'>{title}</h2>\r\n                <div\r\n                  className={ `pr-2 ${styles.blocks_container}`}\r\n                  data-id='container'\r\n                >\r\n                  <ul className={`${styles.blocks_list}`}>\r\n                    {children}\r\n                  </ul>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <div\r\n                  className={ `pr-2 ${styles.blocks_container}`}\r\n                  data-id='container'\r\n                >\r\n                  <ul className={`${styles.blocks_list}`}>\r\n                    {children}\r\n                  </ul>\r\n                </div>\r\n              </>\r\n            )\r\n            }\r\n          </>\r\n        )\r\n      )\r\n    },\r\n    [request, requestFailed]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <section\r\n        className=\r\n          {type === \"right\"\r\n            ? `${styles.column} pt-10 mr-15`\r\n            : type === \"none\"\r\n              ? `${styles.column} ${styles.column_mt_none}`\r\n              : `${styles.column} pt-25`}>\r\n        {content}\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n","import { IngredientIcon } from \"./ingredient-icon\";\r\n\r\nexport default IngredientIcon;","import { FC } from 'react';\r\n\r\nimport { TIngredientInUpdateOrder } from '../../services/types/data';\r\nimport Preloader from '../preloader';\r\nimport styles from './ingredient-icon.module.css';\r\n\r\ntype TIngredientIconProps = {\r\n  item: TIngredientInUpdateOrder,\r\n  count?: number,\r\n  index: number,\r\n  type: string\r\n}\r\n\r\nexport const IngredientIcon: FC<TIngredientIconProps> = ({ item, count, index, type }) => {\r\n  const zIndex: number = type === \"shift\" ? (100 - index) : 1;\r\n  const leftShift: number = type === \"shift\" ? index*(64 - 16) : 0;\r\n\r\n  return (\r\n    (type===\"shift\") ? (\r\n      <li className={`${styles.icon}`} style={{zIndex: zIndex, left: `${leftShift}px`}}>\r\n        <div\r\n          className={`${styles.icon_wrapper}`}>\r\n          { item ? (\r\n            <img\r\n              src={item.image}\r\n              alt={item.name}\r\n              className=\r\n                {count ?\r\n                  `${styles.icon_img_hidden}`\r\n                :\r\n                  `${styles.icon_img}`}\r\n            />\r\n            ) : (\r\n              <Preloader />\r\n            )\r\n          }\r\n          {count && count !==0 &&\r\n            <span\r\n              className={` text text_type_digits-default ${styles.icon_count}`}\r\n            >\r\n              {`+${count}`}\r\n            </span>\r\n          }\r\n        </div>\r\n      </li>\r\n    ) : (\r\n      <div className={`${styles.icon_full}`}>\r\n        { item ? (\r\n          <div\r\n            className={`${styles.icon_wrapper}`}\r\n          >\r\n            <img\r\n              src={item.image}\r\n              alt={item.name}\r\n              className={styles.icon_img}\r\n            />\r\n          </div>\r\n          ) : (\r\n            <Preloader />\r\n          )\r\n        }\r\n      </div>\r\n    )\r\n  )\r\n}","import { FC } from 'react';\r\nimport styles from './order-card.module.css';\r\n\r\ntype TImgredientListProps = {\r\n  children: React.ReactNode\r\n}\r\n\r\nexport const IngredientList: FC<TImgredientListProps> = ({ children }) => {\r\n  return (\r\n    <ul className={`mr-6 ${styles.card_list} `}>\r\n      {children}\r\n    </ul>\r\n  )\r\n}","import { OrderCard } from \"./order-card\";\r\n\r\nexport default OrderCard;","import { FC, useMemo } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nimport IngredientIcon from '../ingredient-icon';\r\nimport { IngredientList } from './ingredient-list';\r\nimport TotalPrice from \"../total-price\";\r\nimport styles from './order-card.module.css';\r\nimport { TIngredientInUpdateOrder, TOrder } from '../../services/types/data';\r\n\r\ntype TOrderCardProps = {\r\n  orderInfo: TOrder, \r\n  page: string\r\n}\r\n\r\nexport const OrderCard: FC<TOrderCardProps> = ({ orderInfo, page }) => {\r\n  const { createdAt, _id, ingredients, name, number } = orderInfo;\r\n  \r\n  const location = useLocation();\r\n  \r\n  const totalPrice = useMemo(\r\n    ()=> {\r\n      if (ingredients && ingredients.length) {\r\n        const newIngredients = (ingredients as TIngredientInUpdateOrder[]).filter((item: TIngredientInUpdateOrder) => item && item.price);\r\n        return newIngredients.reduce(\r\n            (sum: number, item: TIngredientInUpdateOrder) => (sum + item.price * item.count), 0\r\n          );\r\n      } else {return 0}\r\n    },\r\n    [ingredients]\r\n  );\r\n\r\n  const content = useMemo(\r\n    () => {\r\n      return (\r\n        ingredients && <IngredientList>\r\n          {(ingredients as TIngredientInUpdateOrder[]).filter((item: TIngredientInUpdateOrder, index: number) => index <= 7)\r\n            .map(\r\n            (item: TIngredientInUpdateOrder, index: number) =>\r\n              item && <IngredientIcon\r\n                key={`${item.id}`}\r\n                item={item}\r\n                index={index}\r\n                count={item.count === 1 ? 0 : item.count}\r\n                type=\"shift\"\r\n              />\r\n            )\r\n          }\r\n        </IngredientList>\r\n      )\r\n    },\r\n    [ingredients]\r\n  );\r\n\r\n  const path = page !== 'profile' ? 'feed' : 'profile/orders';\r\n  return (\r\n    <Link\r\n      key={_id}\r\n      to={{\r\n        pathname: `/${path}/${number}`,\r\n        state: { background: location }\r\n      }}\r\n      className={styles.link}\r\n    >\r\n      <div className={`pt-6 pr-6 pb-6 pl-6 ${styles.card_wrapper}`}>\r\n        <div className={`mb-6 ${styles.card_row}`}>\r\n          <span className=\"text text_type_digits-default\">{`#${number}`}</span>\r\n          <span className=\"text text_type_main-default text_color_inactive\">\r\n            {createdAt}\r\n          </span>\r\n        </div>\r\n        <h3 className=\"text text_type_main-medium mb-6\">{name}</h3>\r\n        <div className={`${styles.card_row} ${styles.card_row_big}`}>\r\n          {content}\r\n          <TotalPrice totalPrice={totalPrice} type=\"def\"/>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  )\r\n}","import { FC, useMemo } from 'react';\r\nimport { useSelector } from '../../services/hooks';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport Column from '../column';\r\nimport OrderCard from '../order-card';\r\nimport Preloader from '../preloader';\r\nimport { TOrder } from '../../services/types/data';\r\n\r\ntype TOrderProps = {\r\n  page: string\r\n}\r\n\r\nconst Orders: FC<TOrderProps> = ({ page }) => {\r\n  const { ordersAll, ordersUser } = useSelector((state) => ({\r\n    ordersAll: state.ws.orders,\r\n    ordersUser: state.wsUser.orders,\r\n  }));\r\n\r\n  const path = useLocation();\r\n\r\n  const orders = (!path.pathname.includes('profile'))\r\n    ? ordersAll\r\n    : (ordersUser && ordersUser.length)\r\n      ? ordersUser\r\n      : null;\r\n\r\n  const updateOrders = useMemo(\r\n    () => {\r\n      if (orders && orders.length) {\r\n        return orders.filter((item: TOrder) => item.isUpdateOrder === true)\r\n      }\r\n    },\r\n    [orders]\r\n  );\r\n  \r\n  return (\r\n    <>\r\n      {(updateOrders && updateOrders.length) ? (\r\n        updateOrders.map(\r\n          (item: TOrder, index: number) => \r\n            <li key={`${item._id}${index}`} className=\"mb-4\">\r\n              <OrderCard orderInfo={item} page={page}/>\r\n            </li>\r\n        )\r\n      ) : (\r\n        orders && orders.length ? (\r\n          <Preloader />\r\n        ) : (\r\n          <p className=\"mt-20 text text_type_main-medium\">\r\n            У пользователя нет заказов\r\n          </p>\r\n        )\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\ntype TListOfOrdersProps = {\r\n  page: string\r\n}\r\n\r\nexport const ListOfOrders: FC<TListOfOrdersProps> = ({ page }) => {\r\n\r\n  return (\r\n    <Column\r\n      request={false}\r\n      requestFailed={false}\r\n      title= {page === 'feed' ? \"Лента заказов\" : null}\r\n      type={page === 'feed' ? \"right\" : \"none\"}\r\n    >\r\n      <Orders page={page}/>\r\n    </Column>\r\n  );\r\n}\r\n","import { ListOfOrders } from './list-of-orders';\r\n\r\nexport default ListOfOrders;","import { FC } from 'react';\r\nimport { TOrder } from '../../services/types/data';\r\nimport styles from './summury-of-orders.module.css';\r\n\r\ntype TColumnOfOrdersProps = {\r\n  orders: TOrder[],\r\n  type: string\r\n}\r\n\r\nexport const ColumnOfOrders: FC<TColumnOfOrdersProps> = ({ orders, type }) => {\r\n  return (\r\n    <div className={type === 'done' ? `${styles.column_wrapper} mr-9` : `${styles.column_wrapper}`}>\r\n      <h3 className=\"mb-6 text text_type_main-medium\">\r\n        {type === 'done' ? `Готовы:` : `В работе:`}\r\n      </h3>\r\n      {orders.length ? (\r\n        <div className={styles.orders}>\r\n          <ul className={styles.orders_list}>\r\n            {orders.map(\r\n              (item, index) => \r\n                <li key={index} className=\"mb-2\">\r\n                  <span\r\n                    className=\r\n                      {type === 'done'\r\n                        ? `text text_type_digits-default ${styles.item_done}`\r\n                        : `text text_type_digits-default`}\r\n                  >\r\n                    {item.number}\r\n                  </span>\r\n                </li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n        ) : (\r\n          <div className='text text_type_main-default'>Заказов нет</div>\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}","import { FC } from 'react';\r\n\r\ntype TTotalOrdersProps = {\r\n  title: string,\r\n  total: number,\r\n  style: string,\r\n}\r\n\r\nexport const TotalOrders: FC<TTotalOrdersProps> = ({ title, total, style }) => {\r\n  return (\r\n    <div className={style}>\r\n      <h3 className=\"text text_type_main-medium\">{title}</h3>\r\n      <p className=\"text text_type_digits-large\">{total}</p>\r\n    </div>\r\n  )\r\n}","import { useMemo } from 'react';\r\nimport { useSelector } from '../../services/hooks';\r\n\r\nimport Column from \"../column\";\r\nimport { ColumnOfOrders } from './column-of-orders';\r\nimport { TotalOrders } from './total-orders';\r\nimport styles from './summury-of-orders.module.css';\r\n\r\nconst Summury = () => {\r\n  const { orders, total, totalToday } = useSelector((store) => ({\r\n    orders: store.ws.orders,\r\n    total: store.ws.total,\r\n    totalToday: store.ws.totalToday,\r\n  }))\r\n  \r\n  const ordersDone = useMemo(\r\n    () => {\r\n      if (orders.length) {\r\n        return orders.filter(item => item.status === 'done').filter((item, index) => index <= 9)\r\n      }\r\n    },\r\n    [orders]\r\n  );\r\n\r\n  const ordersOther = useMemo(\r\n    () => {\r\n      if (orders.length) {\r\n        return orders.filter(item => item.status !== 'done').filter((item, index) => index <= 9)\r\n      }\r\n    },\r\n    [orders]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className={`mb-15 ${styles.summury_status}`}>\r\n        {ordersDone && <ColumnOfOrders type=\"done\" orders={ordersDone} />}\r\n        {ordersOther && <ColumnOfOrders type=\"created\" orders={ordersOther} />}\r\n      </div>\r\n      {total && <TotalOrders\r\n        title=\"Выполнено за все время:\"\r\n        total={total}\r\n        style=\"mb-15\"\r\n      />}\r\n      {totalToday && <TotalOrders\r\n        title=\"Выполнено за сегодня:\"\r\n        total={totalToday}\r\n        style=\"\"\r\n      />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport const SummuryOfOrders = () => {\r\n  return (\r\n    <Column request={false} requestFailed={false} type=\"\">\r\n      <Summury />\r\n    </Column>\r\n  )\r\n}","import { SummuryOfOrders } from \"./summury-of-orders\";\r\n\r\nexport default SummuryOfOrders;","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from '../services/hooks';\r\n\r\nimport ListOfOrders from \"../components/list-of-orders\";\r\nimport SummuryOfOrders from \"../components/summury-of-orders\";\r\nimport { processOrders } from '../utils/process-orders';\r\nimport { \r\n  WS_CONNECTION_START,\r\n  WS_CONNECTION_CLOSED,\r\n  WS_UPDATE_ORDER\r\n} from '../services/actions/ws';\r\n\r\nexport const FeedPage = () => {\r\n  const dispatch = useDispatch();\r\n  const { data, orders } = useSelector((store) => ({\r\n    data: store.data.data,\r\n    orders: store.ws.orders\r\n  }));\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch({\r\n        type: WS_CONNECTION_START\r\n      });\r\n\r\n      return () => {\r\n        dispatch({\r\n          type: WS_CONNECTION_CLOSED\r\n        });\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    async function getOrder() {\r\n      let ordersNoUpdating;\r\n      if (orders && orders.length) {\r\n        ordersNoUpdating = orders.filter(item => !item.isUpdateOrder);\r\n      }\r\n      if (ordersNoUpdating && ordersNoUpdating.length !== 0) {\r\n        const updateOrder = await processOrders(data, ordersNoUpdating, 'ws')\r\n        //const updateOrder = await processOrders(data, order, 'orderInfo');\r\n          if (updateOrder && updateOrder.ingredients) {\r\n            dispatch({\r\n              type: WS_UPDATE_ORDER,\r\n              updateOrder\r\n            })\r\n          };\r\n          // } else if ( updateOrder && newIngredients.length && updatingState === 'wsUser' ) {\r\n          //   dispatch({\r\n          //     type: WS_USER_UPDATE_ORDER,\r\n          //     updateOrder\r\n          //   })\r\n      };\r\n    };\r\n    getOrder();\r\n    },\r\n    [orders]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <ListOfOrders page='feed'/>\r\n      <SummuryOfOrders />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FeedPage;","import { getResponseData } from \"../../utils/get-response-data\";\r\nimport { AppDispatch } from \"../types\";\r\nimport { TOrder, TOrderUpdated } from \"../types/data\";\r\n\r\nexport const GET_ORDER_INFO_REQUEST: 'GET_ORDER_INFO_REQUEST' = 'GET_ORDER_INFO_REQUEST';\r\nexport const GET_ORDER_INFO_SUCCESS: 'GET_ORDER_INFO_SUCCESS' = 'GET_ORDER_INFO_SUCCESS';\r\nexport const GET_ORDER_INFO_FAILED: 'GET_ORDER_INFO_FAILED' = 'GET_ORDER_INFO_FAILED';\r\nexport const UPDATE_ORDER_INFO: 'UPDATE_ORDER_INFO' = 'UPDATE_ORDER_INFO';\r\n\r\nexport interface IGetOrderInfoRequest {\r\n  readonly type: typeof GET_ORDER_INFO_REQUEST;\r\n}\r\n\r\nexport interface IGetOrderInfoSuccess {\r\n  readonly type: typeof GET_ORDER_INFO_SUCCESS;\r\n  readonly orders: TOrder[];\r\n}\r\n\r\nexport interface IGetOrderInfoFailed {\r\n  readonly type: typeof GET_ORDER_INFO_FAILED;\r\n}\r\n\r\nexport interface IUpdateOrderInfo {\r\n  readonly type: typeof UPDATE_ORDER_INFO;\r\n  readonly updateOrder: TOrderUpdated;\r\n}\r\n\r\nexport interface IDefault {\r\n  readonly type: typeof undefined;\r\n}\r\n\r\nexport type TOrderInfo = \r\n  | IGetOrderInfoRequest\r\n  | IGetOrderInfoSuccess\r\n  | IGetOrderInfoFailed\r\n  | IUpdateOrderInfo\r\n  | IDefault;\r\n\r\nconst API_SOURCE_DATA = 'https://norma.nomoreparties.space/api/orders/';\r\n\r\nexport function getOrderInfoRequest(number: string) {\r\n  return function(dispatch: AppDispatch) {\r\n    dispatch({\r\n      type: GET_ORDER_INFO_REQUEST\r\n    })\r\n    return fetch(`${API_SOURCE_DATA}${number}`)\r\n      .then(getResponseData)\r\n      .then(res => {\r\n        dispatch({\r\n          type: GET_ORDER_INFO_SUCCESS,\r\n          orders: res.orders\r\n        });\r\n      })\r\n      .catch(error => {\r\n        dispatch({\r\n          type: GET_ORDER_INFO_FAILED\r\n        });\r\n      })\r\n  }\r\n}","import { IngredientItem } from './ingredient-item';\r\n\r\nexport default IngredientItem;","import { FC } from 'react';\r\nimport { TIngredientInUpdateOrder } from '../../services/types/data';\r\n\r\nimport IngredientIcon from \"../ingredient-icon\";\r\nimport TotalPrice from \"../total-price\";\r\nimport styles from \"./ingredient-item.module.css\";\r\n\r\ntype TIngredientItem = {\r\n  index: number,\r\n  item: TIngredientInUpdateOrder,\r\n}\r\n\r\nexport const IngredientItem: FC<TIngredientItem> = ({ index, item }) => {\r\n  \r\n  return (\r\n    <li className={`mb-4 ${styles.item}`}>\r\n      <IngredientIcon\r\n        index={index}\r\n        item={item}\r\n        type=\"full\"\r\n      />\r\n      <h5 className={`text text_type_main-default ml-4 mr-4 ${styles.item_title}`}>{item.name}</h5>\r\n      <div className={ styles.total }>\r\n        <TotalPrice count={item.count} totalPrice={item.price} type=\"def\"/>\r\n      </div>\r\n    </li>\r\n  )\r\n}","import { FeedInfoDetails } from \"./feed-info-details\";\r\n\r\nexport default FeedInfoDetails;","import { useEffect, useMemo, useState } from 'react';\r\nimport { useDispatch ,useSelector } from '../../services/hooks';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\n\r\nimport { UPDATE_ORDER_INFO } from '../../services/actions/order-info';\r\nimport IngredientItem from '../ingredient-item';\r\nimport Preloader from '../preloader';\r\nimport TotalPrice from '../total-price';\r\nimport { getOrderInfoRequest } from '../../services/actions/order-info';\r\nimport { processOrders } from '../../utils/process-orders';\r\nimport styles from './feed-info-details.module.css';\r\nimport { TIngredientInUpdateOrder, TOrder } from '../../services/types/data';\r\n\r\nexport const FeedInfoDetails = () => {\r\n  const dispatch = useDispatch();\r\n  const { data, ordersAll, ordersUser, order } = useSelector((state) => ({\r\n    data: state.data.data,\r\n    ordersAll: state.ws.orders,\r\n    ordersUser: state.wsUser.orders,\r\n    order: state.orderInfo.orderInfo\r\n  }));\r\n  const path = useLocation();\r\n\r\n  const orders = (!path.pathname.includes('profile'))\r\n    ? ordersAll\r\n    : (ordersUser && ordersUser.length)\r\n      ? ordersUser\r\n      : null;\r\n  \r\n  const { orderNumber } = useParams<{orderNumber: string}>();\r\n  const [orderData, setOrderData] = useState<TOrder | null>(null);\r\n  const [error, setError] = useState<boolean>(false);\r\n\r\n  const getOrderInfo = async () => {\r\n    return await [...orders as TOrder[]].filter(item => String(item.number) === orderNumber);\r\n  }\r\n\r\n  useEffect(() => {\r\n      async function getOrder() {\r\n        let soughtOrder;\r\n        let orderDataValue = null;\r\n        let errorValue = false;\r\n        if (orders && orders.length) {\r\n          // есть orders - открыто модальоне окно и данные есть\r\n          soughtOrder = await getOrderInfo();\r\n          if (soughtOrder && soughtOrder.length) {\r\n            if (soughtOrder[0].isUpdateOrder) {\r\n              orderDataValue = soughtOrder[0];\r\n            } else {\r\n              console.log('данные нужно обработать');\r\n            }\r\n          } else {\r\n            errorValue = true;\r\n          }\r\n          \r\n        } else { // нет orders - открыта отдельная страница, данные нужно получить с сервера\r\n          dispatch(getOrderInfoRequest(orderNumber));\r\n        }\r\n        setOrderData(orderDataValue);\r\n        setError(errorValue);\r\n      };\r\n      getOrder();\r\n    },\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n      async function getOrder() {\r\n        let orderDataValue: TOrder | null = null;\r\n        let errorValue: boolean = false;\r\n        if (order && order.length && data && data.length) {\r\n          const updateOrder = await processOrders(data, order, 'orderInfo');\r\n          if ( updateOrder && updateOrder.ingredients ) {\r\n            dispatch({\r\n              type: UPDATE_ORDER_INFO,\r\n              updateOrder\r\n            })\r\n          }\r\n          if (order[0].isUpdateOrder) {\r\n            orderDataValue = order[0]\r\n          } else {\r\n            console.log('данные нужно обработать');\r\n          }\r\n        }\r\n        setOrderData(orderDataValue);\r\n      };\r\n      getOrder();\r\n    },\r\n    [data, order]\r\n  )\r\n\r\n  const totalPrice = useMemo(\r\n    ()=> {\r\n      if (orderData && orderData.ingredients && orderData.ingredients.length) {\r\n        const ingredientsFromOrderStore = orderData.ingredients as TIngredientInUpdateOrder[];\r\n        const newIngredients: Array<TIngredientInUpdateOrder> =\r\n          ingredientsFromOrderStore.filter((item: TIngredientInUpdateOrder) => !!item);\r\n\r\n        const acc: number = 0;\r\n        return newIngredients.reduce(\r\n            (sum: number, item: TIngredientInUpdateOrder) =>\r\n              (sum + item.price * item.count),\r\n            acc\r\n          );\r\n      }\r\n    },\r\n    [orderData]\r\n  );\r\n\r\n  const ingredientsContent = useMemo(\r\n    () => {\r\n      const orderDataCur = orderData as TOrder;\r\n      if (orderDataCur && orderDataCur.ingredients.length) {\r\n        const ingredientsFromOrder = orderDataCur.ingredients as TIngredientInUpdateOrder[];\r\n        return (\r\n          ingredientsFromOrder.length &&\r\n            ingredientsFromOrder.filter((item: TIngredientInUpdateOrder) => !!item)\r\n              .map(\r\n                (item: TIngredientInUpdateOrder, index: number) =>\r\n                  <IngredientItem\r\n                    key={`${index}`}\r\n                    item={item}\r\n                    index={index}\r\n                  />\r\n          )\r\n        )\r\n      }\r\n    },\r\n    [orderData as TOrder]\r\n  )\r\n\r\n  return (\r\n    <>\r\n      {error ? (\r\n          <p className='text text_type_main-medium text_color_inactive mt-8'>Заказ с таким ID не найден</p>\r\n        ) : (\r\n          !orderData ? (\r\n            <Preloader />\r\n          ) : (\r\n            <div className={ styles.content}>\r\n              <h3 className={`mb-10 text text_type_digits-default ${styles.title}`}>\r\n                {`#${orderData.number}`}\r\n              </h3>\r\n              <h4 className={`mb-3 text text_type_main-medium ${styles.name}`}>\r\n                {orderData.name}\r\n              </h4>\r\n              <p className={`mb-15 text text_type_main-default \r\n                ${orderData.status !== 'done' ? styles.status_green : styles.status}`}>\r\n                {orderData.status === 'done' ? \"Готов\" : \"В работе\"}\r\n              </p>\r\n              <h4 className={`mb-6 text text_type_main-medium ${styles.name}`}>Состав:</h4>\r\n              <div className={`mb-10`}>\r\n                <ul className={`pr-4 ${styles.ingredients_list}`}>\r\n                  { ingredientsContent }\r\n                </ul>\r\n              </div>\r\n              <div className={styles.row}>\r\n                <span className=\"text text_type_main-default text_color_inactive\">\r\n                  {orderData.createdAt}\r\n                </span>\r\n                {totalPrice && <TotalPrice totalPrice={totalPrice} type=\"def\"/>}\r\n              </div>\r\n          </div>\r\n          )\r\n        )\r\n      }\r\n    </>\r\n  )\r\n}","import FeedInfoDetails from \"../components/feed-info-details\";\r\nimport styles from './feed-info.module.css';\r\n\r\nexport const FeedInfoPage = () => {\r\n  return (\r\n    <div className={ styles.wrapper }>\r\n      <FeedInfoDetails />\r\n    </div>\r\n  )\r\n}","import ElementWithIcon from './element-with-icon';\r\nexport default ElementWithIcon;","import { FC, ReactElement } from 'react';\r\n\r\nimport styles from './element-with-icon.module.css';\r\n\r\ntype TElementWithIconProps = {\r\n  icon: ReactElement,\r\n  text: string,\r\n  type?: string\r\n}\r\n\r\nconst ElementWithIcon: FC<TElementWithIconProps> = ({ icon, text, type }) => {\r\n  return (\r\n    <div className={`pr-5 pl-5 ${styles.link}`}>\r\n      <div className={ styles.link_icon }>{icon}</div>\r\n      {text && <span className={`text text_type_main-default pl-2 ${type}`}>{text}</span>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ElementWithIcon","import AppHeader from './app-header';\r\nexport default AppHeader;","import { useSelector } from '../../services/hooks';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n  Logo,\r\n  ProfileIcon,\r\n  ListIcon,\r\n  BurgerIcon\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport styles from './app-header.module.css';\r\nimport ElementWithIcon from '../element-with-icon';\r\nimport NavItem from '../nav-item';\r\nimport Menu from '../menu';\r\n\r\nconst AppHeader = () =>{\r\n  const { isLoggedIn } = useSelector((state) => ({\r\n    isLoggedIn: state.user.isLoggedIn\r\n  }));\r\n\r\n  return (\r\n    <div className={ styles.wrapper }>\r\n      <div className={ styles.container }>\r\n        <header className=\"header\">\r\n          <div className=\"pt-4 pb-4\">\r\n            <div className={ styles.header_content}>\r\n              <Menu\r\n                style = \"row\"\r\n                children={[\r\n                  {\r\n                    icon: <BurgerIcon type=\"secondary\"/>,\r\n                    text: \"Конструктор\",\r\n                    link: \"/\"\r\n                  },\r\n                  {\r\n                    icon: <ListIcon type=\"secondary\"/>,\r\n                    text: \"Лента заказов\",\r\n                    link: \"/feed\"\r\n                  }\r\n                ]\r\n                .map((item, index) =>\r\n                  <li\r\n                    className='mr-2'\r\n                    key={`menu${index}`}\r\n                  >\r\n                    <NavItem link={item.link}>\r\n                      <ElementWithIcon\r\n                        icon={item.icon}\r\n                        text={item.text}\r\n                      />\r\n                    </NavItem>\r\n                  </li>\r\n                )\r\n              }/>\r\n              <div className={styles.elements_wrapper}>\r\n                <Link to={\"/\"}>\r\n                  <Logo/>\r\n                </Link>\r\n                <NavItem link={isLoggedIn ? '/profile' : '/login'}>\r\n                  <ElementWithIcon\r\n                    icon={isLoggedIn ? <ProfileIcon type=\"secondary\"/> : <ListIcon type=\"secondary\" />}\r\n                    text={isLoggedIn ? \"Личный кабинет\" : \"Войти\"}\r\n                  />\r\n                </NavItem>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppHeader;","import ModalOverlay from './modal-overlay';\r\nexport default ModalOverlay;","import React, { FC, useEffect } from 'react';\r\n\r\nimport styles from './modal-overlay.module.css';\r\nimport { ESC_KEYCODE } from '../../utils/constants';\r\n\r\ntype TModalOverlayProps = {\r\n  handleModalClose: () => void,\r\n  children: React.ReactNode,\r\n};\r\n\r\nconst ModalOverlay: FC<TModalOverlayProps> = ({ handleModalClose, children }) => {\r\n  const escFunction = (e: any) => {\r\n    if (e.keyCode === ESC_KEYCODE) {\r\n      handleModalClose();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", escFunction);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", escFunction);\r\n    }\r\n  }, []);\r\n  \r\n  return (\r\n    <div className={styles.overlay} onClick={handleModalClose}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalOverlay","import React, { FC } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport ModalOverlay from '../modal-overlay';\r\nimport styles from './modal.module.css';\r\n\r\nconst modalRoot = document.getElementById('react-modals');\r\n\r\ntype TModalProps = {\r\n  handleModalClose: () => void,\r\n  title?: string,\r\n  children: React.ReactNode,\r\n  width?: string,\r\n};\r\n\r\nconst Modal: FC<TModalProps> = ({ handleModalClose, title, children, width }) => {\r\n  return createPortal(\r\n    (\r\n      <ModalOverlay handleModalClose={handleModalClose}>\r\n        <div\r\n          className={`pt-10 pr-10 pb-15 pl-10 ${styles.modal}`}\r\n          onClick={e => e.stopPropagation()}\r\n        >\r\n          <div className={styles.modal_row}>\r\n            <h2 className=\"text text_type_main-large\">\r\n              {title}\r\n            </h2>\r\n            <div className={styles.icon_wrapper} onClick={handleModalClose}>\r\n              <CloseIcon type=\"primary\"/>\r\n            </div>\r\n          </div>\r\n          <div className={`${styles.wrapper } ${width && styles.wrapper_wide}`}>\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </ModalOverlay>\r\n    ),\r\n    modalRoot as HTMLDivElement\r\n  );\r\n}\r\n\r\nexport default Modal","import Modal from './modal';\r\nexport default Modal;","import { NoAuthRoute } from './no-auth-route';\r\n\r\nexport default NoAuthRoute;","import { FC } from 'react';\r\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\r\n\r\nexport const NoAuthRoute: FC<RouteProps> = ({ children, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={() =>\r\n        !localStorage.getItem('refreshToken') ? (\r\n          children\r\n        ) : (\r\n          <Redirect to={{ pathname: '/' }} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","import OrderDetails from './order-details';\r\nexport default OrderDetails;","import { useEffect, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\n\r\nimport styles from './order-details.module.css';\r\nimport { CheckMarkIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport Preloader from '../preloader';\r\nimport { ORDER_RESET } from '../../services/actions/order';\r\nimport { TOrderFull } from '../../services/types/data';\r\n\r\nconst OrderDetails = () => {\r\n  const { order, orderRequest, orderFailed } = useSelector(state => ({\r\n    order: state.order.order,\r\n    orderRequest: state.order.orderRequest,\r\n    orderFailed: state.order.orderFailed,\r\n  }));\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(\r\n    () => {\r\n    return () => {\r\n      dispatch({ type: ORDER_RESET })\r\n    }\r\n  },[]\r\n  )\r\n\r\n  const content = useMemo(\r\n    () => {\r\n      return orderRequest ? (\r\n        <Preloader />\r\n        ) : (\r\n        orderFailed ? (\r\n          <p className=\"text text_type_main-medium\">Произошла ошибка. Обратитесь в техподдержку.</p>\r\n        ) : (\r\n          <>\r\n            <p className=\"text text_type_digits-large mb-8\">{(order as TOrderFull).number}</p>\r\n            <p className=\"text text_type_main-medium mb-15\">идентификатор заказа</p>\r\n            <div className={`mb-15 ${styles.icon_wrapper}`}>\r\n              <CheckMarkIcon type=\"primary\"/>\r\n            </div>\r\n            <p className=\"text text_type_main-default mb-2\">Ваш заказ начали готовить</p>\r\n            <p className=\"text text_type_main-default text_color_inactive\">Дождитесь готовности на орбитальной станции</p>\r\n          </>\r\n        ))\r\n    },\r\n    [order, orderFailed, orderRequest]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {content}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrderDetails","import { ProtectedRoute } from './protected-route';\r\n\r\nexport default ProtectedRoute;","import { FC } from 'react';\r\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\r\nimport { useSelector } from '../../services/hooks';\r\n\r\nexport const ProtectedRoute: FC<RouteProps> = ({ children, ...rest }) => {\r\n  const {isLoggedIn } = useSelector((state) => ({\r\n    isLoggedIn: state.user.isLoggedIn\r\n  }));\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        isLoggedIn ? (\r\n        children\r\n      ) : (\r\n        <Redirect\r\n          to={{\r\n            pathname:'/login',\r\n            state: {from: location}\r\n          }} />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { ProfileForm } from \"./profile-form\";\r\n\r\nexport default ProfileForm;","import { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\n\r\nimport {\r\n  Button,\r\n  Input,\r\n  EmailInput,\r\n  PasswordInput\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport FormWrapper from '../form-wrapper';\r\nimport Preloader from '../preloader';\r\nimport { getUserData, patchUserData } from '../../services/actions/user';\r\nimport styles from './profile-form.module.css';\r\n\r\nexport const ProfileForm = () => {\r\n  const dispatch = useDispatch();\r\n  const { user, userDataRequest, userDataFailed, userDataFailedMessage, refreshTokenFailed } = useSelector((state) => ({\r\n    user: state.user.user,\r\n    userDataRequest: state.user.userDataRequest,\r\n    userDataFailed: state.user.userDataFailed,\r\n    userDataFailedMessage: state.user.userDataFailedMessage,\r\n    refreshTokenFailed: state.user.refreshTokenFailed\r\n  }));\r\n  \r\n  const inputRef = useRef<any>(null);\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!user) dispatch(getUserData());\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  type TState = {\r\n    name: string,\r\n    email: string,\r\n    password: string,\r\n  }\r\n\r\n  const [state, setState] = useState<TState>({\r\n    name: '',\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  type TPayload = {\r\n    name?: string,\r\n    email?: string,\r\n    password?: string,\r\n  }\r\n\r\n  const [payload, setPayload] = useState<TPayload>({});\r\n\r\n  const [disabled, setDisabled] = useState(true);\r\n\r\n  useEffect(\r\n    () => {\r\n      setState({\r\n        ...state,\r\n        name: user.name,\r\n        email: user.email\r\n      });\r\n    },\r\n    [user]\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      let payload = {};\r\n      if (state.password !== '') {\r\n        payload = {\r\n          ...payload,\r\n          password: state.password\r\n        }\r\n      }\r\n      if (user.name !== state.name) {\r\n        payload = {\r\n          ...payload,\r\n          name: state.name\r\n        }\r\n      }\r\n      if (user.email !== state.email) {\r\n        payload = {\r\n          ...payload,\r\n          email: state.email\r\n        }\r\n      }\r\n      setPayload(payload);\r\n    },\r\n    [state]\r\n  )\r\n\r\n  const handleInputChange: React.ChangeEventHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const target = e.target;\r\n    setState({\r\n      ...state,\r\n      [target.name]: target.value\r\n    })\r\n  }\r\n\r\n  const onIconClick = () => {\r\n    if (inputRef.current) {\r\n      setTimeout(() => inputRef.current.focus(), 0)\r\n    }\r\n    setDisabled(false);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    setDisabled(true);\r\n  }\r\n\r\n  const onCancelHandler = () => {\r\n    setState({\r\n      ...state,\r\n      name: user.name,\r\n      email: user.email,\r\n      password: ''\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {userDataRequest ? \r\n        refreshTokenFailed ? (\r\n          <div className=\"text text_type_main-default text_color_inactive mr-2\">\r\n            Перезагрузите страницу\r\n          </div>\r\n        ) : (\r\n        <Preloader />\r\n      ) : (\r\n        <FormWrapper actionFunc={patchUserData(payload)} validateFunc={undefined}>\r\n          <div className=\"mb-6\">\r\n            <Input\r\n              disabled={disabled}\r\n              type={'text'}\r\n              placeholder={'Имя'}\r\n              onChange={handleInputChange}\r\n              icon={'EditIcon'}\r\n              value={state.name}\r\n              name={'name'}\r\n              error={false}\r\n              ref={inputRef}\r\n              onIconClick={onIconClick}\r\n              errorText={''}\r\n              size={'default'}\r\n              onBlur={onBlur}\r\n            />\r\n          </div>\r\n          <div className=\"mb-6\">\r\n            <EmailInput\r\n              onChange={handleInputChange}\r\n              value={state.email}\r\n              name={'email'}\r\n            />\r\n          </div>\r\n          <div className=\"mb-6\">\r\n            <PasswordInput\r\n              onChange={handleInputChange}\r\n              value={state.password}\r\n              name={'password'}\r\n            />\r\n          </div>\r\n          {userDataFailed && userDataFailedMessage !== '' ? \r\n            <p className=\"text text_type_main-medium text_color_inactive mb-5\">\r\n              {userDataFailedMessage.charAt(0).toUpperCase() + userDataFailedMessage.slice(1)}\r\n            </p>\r\n            :\r\n            <></>\r\n          }\r\n          <div className={`mb-20 ${styles.row}`}>\r\n            <Button type=\"primary\" size=\"medium\">\r\n              Сохранить\r\n            </Button>\r\n            <Button type=\"primary\" size=\"medium\" onClick={onCancelHandler}>\r\n              Отменить\r\n            </Button>\r\n          </div>\r\n        </FormWrapper>\r\n      )}\r\n    </>\r\n  )\r\n}","import { getResponseData } from \"../../utils/get-response-data\";\r\nimport { TIngredient } from \"../types/data\";\r\nimport { AppDispatch, AppThunk } from '../types';\r\n\r\nexport const GET_INGREDIENTS_REQUEST = 'GET_INGREDIENTS_REQUEST';\r\nexport const GET_INGREDIENTS_SUCCESS = 'GET_INGREDIENTS_SUCCESS';\r\nexport const GET_INGREDIENTS_FAILED = 'GET_INGREDIENTS_FAILED';\r\n\r\nconst API_SOURCE_DATA = 'https://norma.nomoreparties.space/api/ingredients';\r\n\r\nexport interface IGetIngredientsRequest {\r\n  readonly type: typeof GET_INGREDIENTS_REQUEST;\r\n}\r\n\r\nexport interface IGetIngredientsFailed {\r\n  readonly type: typeof GET_INGREDIENTS_FAILED;\r\n}\r\n\r\nexport interface IGetIngredientsSuccess {\r\n  readonly type: typeof GET_INGREDIENTS_SUCCESS;\r\n  readonly data: Array<TIngredient>;\r\n}\r\n\r\nexport interface IDefault {\r\n  readonly type: typeof undefined;\r\n}\r\n\r\nexport type TIngredientsAction = \r\n  | IGetIngredientsRequest\r\n  | IGetIngredientsFailed\r\n  | IGetIngredientsSuccess\r\n  | IDefault;\r\n\r\nexport const getIngredientsRequest = (): IGetIngredientsRequest => ({\r\n  type: GET_INGREDIENTS_REQUEST\r\n});\r\n\r\nexport const getIngredientsFailed = (): IGetIngredientsFailed => ({\r\n  type: GET_INGREDIENTS_FAILED\r\n});\r\n\r\nexport const getIngredientsSuccess = (\r\n  data: Array<TIngredient>\r\n): IGetIngredientsSuccess => ({\r\n  type: GET_INGREDIENTS_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const getIngredientsThunk: AppThunk = () => (dispatch: AppDispatch) => {\r\n  dispatch(getIngredientsRequest());\r\n  return fetch(API_SOURCE_DATA)\r\n    .then(getResponseData)\r\n    .then(res => {\r\n      dispatch(getIngredientsSuccess(res.data));\r\n    })\r\n    .catch(error => {\r\n      dispatch(getIngredientsFailed());\r\n    });\r\n}","import { useEffect } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  useHistory,\r\n  useLocation\r\n} from 'react-router-dom';\r\nimport { useDispatch } from '../../services/hooks';\r\n\r\nimport \r\n  {\r\n    FeedInfoPage,\r\n    FeedPage,\r\n    ForgotPasswordPage,\r\n    HomePage,\r\n    IngredientPage,\r\n    LoginPage,\r\n    NotFound404,\r\n    RegistrationPage,\r\n    ResetPasswordPage,\r\n    ProfilePage\r\n  } from '../../pages';\r\nimport AppHeader from '../app-header';\r\nimport FeedInfoDetails from '../feed-info-details';\r\nimport IngredientDetails from '../ingredient-details';\r\nimport ListOfOrders from '../list-of-orders';\r\nimport Modal from '../modal';\r\nimport NoAuthRoute from '../no-auth-route';\r\nimport OrderDetails from '../order-details';\r\nimport ProtectedRoute from '../protected-route';\r\nimport ProfileForm from \"../profile-form\";\r\nimport styles from './app.module.css';\r\nimport { getUserData } from '../../services/actions/user';\r\nimport { getIngredientsThunk } from '../../services/actions/data-ingredients';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const refreshToken = localStorage.getItem('refreshToken');\r\n  \r\n  useEffect(\r\n    () => {\r\n      refreshToken && dispatch(getUserData());\r\n      dispatch(getIngredientsThunk());\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Router basename=\"/react-burger\">\r\n      <ModalSwitch />\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction ModalSwitch() {\r\n  let location = useLocation<any>();\r\n  const history = useHistory();\r\n  let background =\r\n    ( history.action === 'PUSH' || history.action === 'REPLACE') &&\r\n    location.state && location.state.background;\r\n  \r\n  const handleModalClose = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppHeader />\r\n      <main className={ `${styles.main}` }>\r\n        <Switch location={background || location}>\r\n          <Route path=\"/\" exact>\r\n            <HomePage />\r\n          </Route>\r\n          <Route path=\"/feed\" exact>\r\n            <FeedPage />\r\n          </Route>\r\n          <NoAuthRoute path=\"/login\" exact>\r\n            <LoginPage />\r\n          </NoAuthRoute>\r\n          <NoAuthRoute path=\"/register\" exact>\r\n            <RegistrationPage />\r\n          </NoAuthRoute>\r\n          <NoAuthRoute path=\"/forgot-password\" exact>\r\n            <ForgotPasswordPage />\r\n          </NoAuthRoute>\r\n          <NoAuthRoute path=\"/reset-password\" exact>\r\n            <ResetPasswordPage />\r\n          </NoAuthRoute>\r\n          <ProtectedRoute path=\"/profile\" exact>\r\n            <ProfilePage\r\n              textInfo=\"В этом разделе вы можете изменить свои персональные данные\"\r\n            >\r\n              <ProfileForm />\r\n            </ProfilePage>\r\n          </ProtectedRoute>\r\n          <Route path=\"/ingredients/:ingredientId\" exact>\r\n            <IngredientPage />\r\n          </Route>\r\n          <Route path=\"/feed/:orderNumber\" exact>\r\n            <FeedInfoPage />\r\n          </Route>\r\n          <ProtectedRoute path=\"/profile/orders\" exact>\r\n            <ProfilePage\r\n              textInfo=\"В этом разделе вы можете просмотреть свою историю заказов\"\r\n            >\r\n              <ListOfOrders page=\"profile\"/>\r\n            </ProfilePage>\r\n          </ProtectedRoute>\r\n          <Route \r\n            path='/profile/orders/:orderNumber'\r\n            children={<FeedInfoPage />}\r\n            exact\r\n          />\r\n          <ProtectedRoute\r\n            path='/order'\r\n            children={\r\n              <Modal handleModalClose={handleModalClose}>\r\n                <OrderDetails />\r\n              </Modal>\r\n            }\r\n          />\r\n          <Route>\r\n            <NotFound404 />\r\n          </Route>\r\n        </Switch>\r\n\r\n        {background && (\r\n          <Route\r\n            path=\"/ingredients/:ingredientId\"\r\n            children={\r\n              <Modal handleModalClose={handleModalClose} title='Детали ингредиента'>\r\n                <IngredientDetails />\r\n              </Modal>\r\n            }\r\n          />\r\n        )}\r\n        {background && (\r\n          <ProtectedRoute\r\n            path='/profile/orders/:orderNumber'\r\n            children={\r\n              <Modal handleModalClose={handleModalClose} title=\"\" width=\"640\">\r\n                <FeedInfoDetails />\r\n              </Modal>\r\n            }\r\n          />\r\n        )}\r\n        {background && (\r\n          <Route\r\n            path=\"/feed/:orderNumber\"\r\n            children={\r\n              <Modal handleModalClose={handleModalClose} title=\"\" width=\"640\">\r\n                <FeedInfoDetails />\r\n              </Modal>\r\n            }\r\n          />\r\n        )}\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import App from './app';\r\nexport default App","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n  GET_INGREDIENTS_REQUEST,\r\n  GET_INGREDIENTS_SUCCESS,\r\n  GET_INGREDIENTS_FAILED\r\n} from '../actions/data-ingredients';\r\nimport { TIngredient } from '../types/data';\r\nimport { TIngredientsAction } from '../actions/data-ingredients';\r\n\r\nexport type TDataIngredientsState = {\r\n  data: Array<TIngredient>;\r\n  dataRequest: boolean;\r\n  dataFailed: boolean;\r\n}\r\n\r\nconst initialState: TDataIngredientsState = {\r\n  data: [],\r\n  dataRequest: false,\r\n  dataFailed: false\r\n}\r\n\r\nexport const dataReducer = (state = initialState, action: TIngredientsAction) => {\r\n  switch (action.type) {\r\n    case GET_INGREDIENTS_REQUEST: {\r\n      return {\r\n        ...state,\r\n        dataRequest: true\r\n      }\r\n    }\r\n    case GET_INGREDIENTS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n        dataRequest: false,\r\n        dataFailed: false\r\n      }\r\n    }\r\n    case GET_INGREDIENTS_FAILED: {\r\n      return {\r\n        ...state,\r\n        dataFailed: true\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n  ADD_SELECTED_INGREDIENT,\r\n  DELETE_SELECTED_INGREDIENT,\r\n  REORDER_SELECTED_INGREDIENTS,\r\n  CLEAR_SELECTED_INGREDIENTS\r\n} from '../actions/data-selected';\r\nimport { TIngredientSelected } from '../types/data';\r\nimport { TDataSelectedActions } from '../actions/data-selected';\r\n\r\nexport type TDataSelectedState = {\r\n  dataSelected: Array<TIngredientSelected>\r\n}\r\n\r\nconst initialState: TDataSelectedState = {\r\n  dataSelected: [],\r\n};\r\n\r\nexport const dataSelectedReducer = (state = initialState, action: TDataSelectedActions) => {\r\n  switch (action.type) {\r\n    case ADD_SELECTED_INGREDIENT: {\r\n      return {\r\n        ...state,\r\n        dataSelected: [...action.newDataSelected]\r\n      }\r\n    }\r\n    case DELETE_SELECTED_INGREDIENT: {\r\n      return {\r\n        ...state,\r\n        dataSelected: [...state.dataSelected.filter(item => item.customID !== action.customID)]\r\n      }\r\n    }\r\n    case REORDER_SELECTED_INGREDIENTS: {\r\n      const newSelectedData = [...state.dataSelected];\r\n      newSelectedData.splice(action.hoverIndex, 0, newSelectedData.splice(action.dragIndex, 1)[0]);\r\n      return {\r\n        ...state,\r\n        dataSelected: newSelectedData\r\n      }\r\n    }\r\n    case CLEAR_SELECTED_INGREDIENTS: {\r\n      return {\r\n        ...state,\r\n        dataSelected: []\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n  GET_ORDER_REQUEST,\r\n  GET_ORDER_SUCCESS,\r\n  GET_ORDER_FAILED,\r\n  ORDER_RESET\r\n} from '../actions/order';\r\nimport { TOrderFull } from '../types/data';\r\nimport { TOrderActions } from '../actions/order';\r\n\r\nexport type TOrderState = {\r\n  order: TOrderFull | {},\r\n  orderRequest: boolean,\r\n  orderFailed: boolean,\r\n}\r\n\r\nconst initialState: TOrderState = {\r\n  order: {},\r\n  orderRequest: false,\r\n  orderFailed: false,\r\n};\r\n\r\nexport const orderReducer = (state = initialState, action: TOrderActions) => {\r\n  switch (action.type) {\r\n    case GET_ORDER_REQUEST: {\r\n      return {\r\n        ...state,\r\n        orderRequest: true\r\n      }\r\n    }\r\n    case GET_ORDER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        order: action.order,\r\n        orderRequest: false,\r\n        orderFailed: false\r\n      }\r\n    }\r\n    case GET_ORDER_FAILED: {\r\n      return {\r\n        ...state,\r\n        orderFailed: true\r\n      }\r\n    }\r\n    case ORDER_RESET: {\r\n      return {\r\n        ...state,\r\n        order: {},\r\n        orderRequest: false,\r\n        orderFailed: false\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n  GET_ORDER_INFO_REQUEST,\r\n  GET_ORDER_INFO_SUCCESS,\r\n  GET_ORDER_INFO_FAILED,\r\n  UPDATE_ORDER_INFO\r\n}  from '../actions/order-info';\r\nimport { TOrderInfo } from '../actions/order-info';\r\nimport { TOrder, TOrderUpdated } from '../types/data';\r\n\r\nexport type TOrderInfoState = {\r\n  orderRequest: boolean,\r\n  orderRequestSuccess: boolean,\r\n  orderRequestFailed: boolean,\r\n  orderInfo: Array<TOrder> | Array<TOrderUpdated>\r\n}\r\n\r\nconst initialState: TOrderInfoState = {\r\n  orderRequest: false,\r\n  orderRequestSuccess: false,\r\n  orderRequestFailed: false,\r\n  orderInfo: []\r\n}\r\n\r\nexport const orderInfoReducer = (state = initialState, action: TOrderInfo) => {\r\n  switch (action.type) {\r\n    case GET_ORDER_INFO_REQUEST:\r\n      return {\r\n        ...state,\r\n        orderRequest: true\r\n      };\r\n    case GET_ORDER_INFO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        orderRequest: false,\r\n        orderRequestSuccess: true,\r\n        orderInfo: action.orders\r\n      };\r\n    case GET_ORDER_INFO_FAILED:\r\n      return {\r\n        ...state,\r\n        orderRequest: false,\r\n        orderFailed: true\r\n      };\r\n    case UPDATE_ORDER_INFO:\r\n      return {\r\n        ...state,\r\n        orderInfo: [action.updateOrder]\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_SUCCESS,\r\n  LOG_IN_FAILED,\r\n  LOG_OUT_REQUEST,\r\n  LOG_OUT_SUCCESS,\r\n  LOG_OUT_FAILED,\r\n  SIGN_IN_REQUEST,\r\n  SIGN_IN_SUCCESS,\r\n  SIGN_IN_FAILED,\r\n  REFRESH_TOKEN_REQUEST,\r\n  REFRESH_TOKEN_SUCCESS,\r\n  REFRESH_TOKEN_FAILED,\r\n  GET_USER_DATA_REQUEST,\r\n  GET_USER_DATA_SUCCESS,\r\n  GET_USER_DATA_FAILED,\r\n  PATCH_USER_DATA_REQUEST,\r\n  PATCH_USER_DATA_SUCCESS,\r\n  PATCH_USER_DATA_FAILED,\r\n  FORGOT_PASSWORD_REQUEST,\r\n  FORGOT_PASSWORD_SUCCESS,\r\n  FORGOT_PASSWORD_FAILED,\r\n  RESTORE_PASSWORD_REQUEST,\r\n  RESTORE_PASSWORD_SUCCESS,\r\n  RESTORE_PASSWORD_FAILED,\r\n  RESTORE_PASSWORD_RESET,\r\n  USER_RESET\r\n} from \"../actions/user\";\r\nimport { TUserActions } from \"../actions/user\";\r\nimport { TUser } from '../types/data';\r\n\r\nexport type TUserState = {\r\n  user: TUser,\r\n  userDataRequest: boolean,\r\n  userDataFailed: boolean,\r\n  userDataFailedMessage: string,\r\n  isLoggedIn: boolean,\r\n  logInRequest: boolean,\r\n  logInFailed: boolean,\r\n  logInFailedMessage: string,\r\n  logOutRequest: boolean,\r\n  logOutFailed: boolean,\r\n  registrateRequest: boolean,\r\n  registrateFailed: boolean,\r\n  registrateFailedMessage: string,\r\n  refreshTokenRequest: boolean,\r\n  refreshTokenFailed: boolean,\r\n  isForgotPassword: boolean,\r\n  forgotPasswordRequest: boolean,\r\n  forgotPasswordFailed: boolean,\r\n  isResetPassword: boolean,\r\n  resetPasswordRequest: boolean,\r\n  resetPasswordFailed: boolean,\r\n}\r\n\r\nconst initialState = {\r\n  user: {name: '', email: ''},\r\n  userDataRequest: false,\r\n  userDataFailed: false,\r\n  userDataFailedMessage: '',\r\n  isLoggedIn: false,\r\n  logInRequest: false,\r\n  logInFailed: false,\r\n  logInFailedMessage: '',\r\n  logOutRequest: false,\r\n  logOutFailed: false,\r\n  registrateRequest: false,\r\n  registrateFailed: false,\r\n  registrateFailedMessage: '',\r\n  refreshTokenRequest: false,\r\n  refreshTokenFailed: false,\r\n  isForgotPassword: false,\r\n  forgotPasswordRequest: false,\r\n  forgotPasswordFailed: false,\r\n  isResetPassword: false,\r\n  resetPasswordRequest: false,\r\n  resetPasswordFailed: false,\r\n}\r\n\r\nexport const userReducer = (state = initialState, action: TUserActions) => {\r\n  switch (action.type) {\r\n    case LOG_IN_REQUEST: {\r\n      return {\r\n        ...state,\r\n        logInRequest: true\r\n      }\r\n    }\r\n    case LOG_IN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        logInRequest: false,\r\n        logInFailed: false\r\n      }\r\n    }\r\n    case LOG_IN_FAILED: {\r\n      return {\r\n        ...state,\r\n        logInFailed: true,\r\n        logInRequest: false,\r\n        logInFailedMessage: action.message,\r\n      }\r\n    }\r\n    case LOG_OUT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        logOutRequest: true\r\n      }\r\n    }\r\n    case LOG_OUT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        logOutRequest: false,\r\n        logOutFailed: false,\r\n        user: {name: '', email: ''}\r\n      }\r\n    }\r\n    case LOG_OUT_FAILED: {\r\n      return {\r\n        ...state,\r\n        logOutFailed: true\r\n      }\r\n    }\r\n    case SIGN_IN_REQUEST: {\r\n      return {\r\n        ...state,\r\n        registrateRequest: true\r\n      }\r\n    }\r\n    case SIGN_IN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        registrateRequest: false,\r\n        registrateFailed: false\r\n      }\r\n    }\r\n    case SIGN_IN_FAILED: {\r\n      return {\r\n        ...state,\r\n        registrateRequest: false,\r\n        registrateFailed: true,\r\n        registrateFailedMessage: action.message,\r\n      }\r\n    }\r\n    case REFRESH_TOKEN_REQUEST: {\r\n      return {\r\n        ...state,\r\n        refreshTokenRequest: true\r\n      }\r\n    }\r\n    case REFRESH_TOKEN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        refreshTokenRequest: false,\r\n        refreshTokenFailed: false\r\n      }\r\n    }\r\n    case REFRESH_TOKEN_FAILED: {\r\n      return {\r\n        ...state,\r\n        refreshTokenRequest: false,\r\n        refreshTokenFailed: true\r\n      }\r\n    }\r\n    case GET_USER_DATA_REQUEST:\r\n    case PATCH_USER_DATA_REQUEST: {\r\n      return {\r\n        ...state,\r\n        userDataRequest: true\r\n      }\r\n    }\r\n    case GET_USER_DATA_SUCCESS:\r\n    case PATCH_USER_DATA_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: action.user,\r\n        userDataRequest: false,\r\n        userDataFailed: false\r\n      }\r\n    }\r\n    case GET_USER_DATA_FAILED:\r\n    case PATCH_USER_DATA_FAILED: {\r\n      return {\r\n        ...state,\r\n        userDataFailed: true,\r\n        userDataRequest: false,\r\n        userDataFailedMessage: action.message\r\n      }\r\n    }\r\n    case FORGOT_PASSWORD_REQUEST: {\r\n      return {\r\n        ...state,\r\n        forgotPasswordRequest: true\r\n      }\r\n    }\r\n    case FORGOT_PASSWORD_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isForgotPassword: action.isForgotPassword,\r\n        forgotPasswordRequest: false,\r\n        forgotPasswordFailed: false\r\n      }\r\n    }\r\n    case FORGOT_PASSWORD_FAILED: {\r\n      return {\r\n        ...state,\r\n        forgotPasswordRequest: false,\r\n        forgotPasswordFailed: true\r\n      }\r\n    }\r\n    case RESTORE_PASSWORD_REQUEST: {\r\n      return {\r\n        ...state,\r\n        resetPasswordRequest: true\r\n      }\r\n    }\r\n    case RESTORE_PASSWORD_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isResetPassword: action.isResetPassword,\r\n        resetPasswordRequest: false,\r\n        resetPasswordFailed: false\r\n      }\r\n    }\r\n    case RESTORE_PASSWORD_FAILED: {\r\n      return {\r\n        ...state,\r\n        resetPasswordRequest: false,\r\n        resetPasswordFailed: true\r\n      }\r\n    }\r\n    case RESTORE_PASSWORD_RESET: {\r\n      return {\r\n        ...state,\r\n        isForgotPassword: false,\r\n        forgotPasswordRequest: false,\r\n        forgotPasswordFailed: false,\r\n        isResetPassword: false,\r\n        resetPasswordRequest: false,\r\n        resetPasswordFailed: false\r\n      }\r\n    }\r\n    case USER_RESET: {\r\n      return {\r\n        user: {name: '', email: ''},\r\n        userDataRequest: false,\r\n        userDataFailed: false,\r\n        userDataFailedMessage: '',\r\n        isLoggedIn: false,\r\n        logInRequest: false,\r\n        logInFailed: false,\r\n        logInFailedMessage: '',\r\n        logOutRequest: false,\r\n        logOutFailed: false,\r\n        registrateRequest: false,\r\n        registrateFailed: false,\r\n        registrateFailedMessage: '',\r\n        refreshTokenRequest: false,\r\n        refreshTokenFailed: false,\r\n        isForgotPassword: false,\r\n        forgotPasswordRequest: false,\r\n        forgotPasswordFailed: false,\r\n        isResetPassword: false,\r\n        resetPasswordRequest: false,\r\n        resetPasswordFailed: false,\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n  WS_CONNECTION_START,\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_GET_MESSAGE,\r\n  WS_CONNECTION_FAILED,\r\n  WS_CONNECTION_CLOSED,\r\n  WS_UPDATE_ORDER\r\n} from '../actions/ws';\r\nimport { TOrder, TOrderUpdated } from '../types/data';\r\nimport { TWsUserState } from './ws-user';\r\nimport { TWsActions } from '../actions/ws';\r\n\r\nconst initialState: TWsUserState = {\r\n  wsConnected: false,\r\n  wsConnectionRequest: false,\r\n  wsConnectionFailed: false,\r\n  orders: [],\r\n  total: null,\r\n  totalToday: null\r\n}\r\n\r\nexport const wsReducer = (state = initialState, action: TWsActions) => {\r\n  switch (action.type) {\r\n    case WS_CONNECTION_START:\r\n      return {\r\n        ...state,\r\n        wsConnectionRequest: true\r\n      };\r\n    case WS_CONNECTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        wsConnectionRequest: false,\r\n        wsConnected: true\r\n      };\r\n    case WS_CONNECTION_FAILED:\r\n      return {\r\n        ...state,\r\n        wsConnected: false,\r\n        wsConnectionRequest: false,\r\n        wsConnectionFailed: true\r\n      };\r\n    case WS_CONNECTION_CLOSED:\r\n      return {\r\n        ...state,\r\n        wsConnected: false\r\n      };\r\n    case WS_GET_MESSAGE:\r\n      let newOrders: TOrder[] = state.orders;\r\n      if (state.orders && state.orders.length) {\r\n        const indexAfterNewOrders: number =\r\n          (action.payload.orders as TOrder[]).findIndex(order => order._id === state.orders[0]._id);\r\n        if (indexAfterNewOrders === 0 || !indexAfterNewOrders) {\r\n          newOrders = action.payload.orders;\r\n        } else {\r\n          newOrders.unshift(...action.payload.orders.slice(0, indexAfterNewOrders));\r\n        }\r\n      } else {\r\n        newOrders = action.payload.orders;\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        orders: newOrders,\r\n        total: action.payload.total,\r\n        totalToday: action.payload.totalToday\r\n      };\r\n    case WS_UPDATE_ORDER:\r\n      return {\r\n        ...state,\r\n        orders:\r\n          [\r\n            ...(state.orders as TOrderUpdated[]).filter(\r\n              (item: TOrderUpdated) => item._id !== action.updateOrder._id\r\n            ),\r\n            action.updateOrder\r\n          ]\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n};\r\n","import {\r\n  WS_USER_CONNECTION_START,\r\n  WS_USER_CONNECTION_SUCCESS,\r\n  WS_USER_GET_MESSAGE,\r\n  WS_USER_CONNECTION_FAILED,\r\n  WS_USER_CONNECTION_CLOSED,\r\n  WS_USER_UPDATE_ORDER\r\n} from '../actions/ws';\r\nimport { TOrder } from '../types/data';\r\nimport { TWsUserActions } from '../actions/ws';\r\n\r\nexport type TWsUserState = {\r\n  wsConnected: boolean,\r\n  wsConnectionRequest: boolean,\r\n  wsConnectionFailed: boolean,\r\n  orders: TOrder[],\r\n  total: number | null,\r\n  totalToday: number | null\r\n}\r\n\r\nconst initialState: TWsUserState = {\r\n  wsConnected: false,\r\n  wsConnectionRequest: false,\r\n  wsConnectionFailed: false,\r\n  orders: [],\r\n  total: null,\r\n  totalToday: null\r\n}\r\n\r\nexport const wsUserReducer = (state = initialState, action: TWsUserActions) => {\r\n  switch (action.type) {\r\n    case WS_USER_CONNECTION_START:\r\n      return {\r\n        ...state,\r\n        wsConnectionRequest: true\r\n      };\r\n    case WS_USER_CONNECTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        wsConnectionRequest: false,\r\n        wsConnected: true\r\n      };\r\n    case WS_USER_CONNECTION_FAILED:\r\n      return {\r\n        ...state,\r\n        wsConnected: false,\r\n        wsConnectionRequest: false,\r\n        wsConnectionFailed: true\r\n      };\r\n    case WS_USER_CONNECTION_CLOSED:\r\n      return {\r\n        ...state,\r\n        wsConnected: false\r\n      };\r\n    case WS_USER_GET_MESSAGE:\r\n      let newOrders: TOrder[] = state.orders;\r\n      if (state.orders && state.orders.length) {\r\n        const indexAfterNewOrders: number =\r\n          (action.payload.orders as TOrder[]).findIndex(order => order._id === state.orders[0]._id);\r\n        if (indexAfterNewOrders === 0 || !indexAfterNewOrders) {\r\n          newOrders = action.payload.orders;\r\n        } else {\r\n          newOrders.unshift(...action.payload.orders.slice(0, indexAfterNewOrders));\r\n        }\r\n      } else {\r\n        newOrders = action.payload.orders;\r\n      }\r\n      \r\n      return {\r\n        ...state,\r\n        orders: newOrders,\r\n        total: action.payload.total,\r\n        totalToday: action.payload.totalToday\r\n      };\r\n    case WS_USER_UPDATE_ORDER:\r\n      return {\r\n        ...state,\r\n          orders:\r\n            [\r\n              ...(state.orders as TOrder[]).filter(\r\n                (item: TOrder) => item._id !== action.updateOrder._id\r\n              ),\r\n              action.updateOrder\r\n            ]\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { dataReducer } from './data-ingredients';\r\nimport { dataSelectedReducer } from './data-selected';\r\nimport { orderReducer } from './order';\r\nimport { orderInfoReducer } from './order-info';\r\nimport { userReducer } from './user';\r\nimport { wsReducer } from './ws';\r\nimport { wsUserReducer } from './ws-user';\r\n\r\nexport const rootReducer = combineReducers({\r\n  data: dataReducer,\r\n  dataSelected: dataSelectedReducer,\r\n  order: orderReducer,\r\n  orderInfo: orderInfoReducer,\r\n  user: userReducer,\r\n  ws: wsReducer,\r\n  wsUser: wsUserReducer\r\n});","import { AnyAction } from 'redux';\r\n\r\nimport { getCookie } from '../../utils/cookie';\r\nimport { wsActions, wsUserActions } from '../store';\r\nimport { AppDispatch, AppThunk } from '../types';\r\n\r\ntype TActions = typeof wsActions | typeof wsUserActions;\r\n\r\nexport const socketMiddleware =\r\n  (wsUrl: string, wsActions: TActions, isUserWebSocket: boolean): any => {\r\n  return (store: { dispatch: AppDispatch | AppThunk }) => {\r\n    let socket: WebSocket | null = null;\r\n\r\n    return (next: any) => (action: AnyAction) => {\r\n      const { dispatch } = store;\r\n      const { type } = action;\r\n      const { wsInit, onOpen, onMessage, onClose, onError } = wsActions;\r\n      const token = getCookie('accessToken');\r\n\r\n      if (isUserWebSocket) {\r\n        if (type === wsInit && token) {\r\n          socket = new WebSocket(`${wsUrl}?token=${token}`);\r\n        }\r\n      } else {\r\n        if (type === wsInit) {\r\n          socket = new WebSocket(`${wsUrl}`);\r\n        }\r\n      }\r\n      \r\n      if (socket) {\r\n        socket.onopen = event => {\r\n          dispatch({ type: onOpen, payload: event });\r\n        };\r\n\r\n        socket.onerror = event => {\r\n          dispatch({ type: onError, payload: event });\r\n        };\r\n\r\n        socket.onmessage = event => {\r\n          const { data } = event;\r\n          const parsedData = JSON.parse(data);\r\n          const { success, ...restParsedData } = parsedData;\r\n          \r\n          dispatch({ type: onMessage, payload: restParsedData });\r\n        };\r\n\r\n        socket.onclose = event => {\r\n          dispatch({ type: onClose, payload: event });\r\n        };\r\n      }\r\n\r\n      next(action);\r\n    };\r\n  };\r\n};","import { applyMiddleware, createStore, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from './reducers';\r\nimport { socketMiddleware } from './middleware';\r\nimport {\r\n  WS_CONNECTION_START,\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_GET_MESSAGE,\r\n  WS_CONNECTION_FAILED,\r\n  WS_CONNECTION_CLOSED,\r\n\r\n  WS_USER_CONNECTION_START,\r\n  WS_USER_CONNECTION_SUCCESS,\r\n  WS_USER_GET_MESSAGE,\r\n  WS_USER_CONNECTION_FAILED,\r\n  WS_USER_CONNECTION_CLOSED\r\n} from './actions/ws';\r\n\r\nconst wsUrl = 'wss://norma.nomoreparties.space/orders/all';\r\nconst wsUserUrl = 'wss://norma.nomoreparties.space/orders';\r\n\r\nexport const wsActions = {\r\n  wsInit: WS_CONNECTION_START,\r\n  onOpen: WS_CONNECTION_SUCCESS,\r\n  onMessage: WS_GET_MESSAGE,\r\n  onClose: WS_CONNECTION_CLOSED,\r\n  onError: WS_CONNECTION_FAILED\r\n};\r\n\r\nexport const wsUserActions = {\r\n  wsInit: WS_USER_CONNECTION_START,\r\n  onOpen: WS_USER_CONNECTION_SUCCESS,\r\n  onMessage: WS_USER_GET_MESSAGE,\r\n  onClose: WS_USER_CONNECTION_CLOSED,\r\n  onError: WS_USER_CONNECTION_FAILED\r\n};\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst enchancer = composeEnhancers(\r\n  applyMiddleware(\r\n    thunk,\r\n    socketMiddleware(wsUrl, wsActions, false),\r\n    socketMiddleware(wsUserUrl, wsUserActions, true),\r\n  )\r\n);\r\n\r\nexport const store = createStore(rootReducer, enchancer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './components/app';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { store } from './services/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"login_wrapper__34T4W\",\"content\":\"login_content__3GouL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"column_column__1Kgiz\",\"column_mt_none\":\"column_column_mt_none__3Eykg\",\"blocks_container\":\"column_blocks_container__dAJlu\",\"blocks_list\":\"column_blocks_list__1C5vo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"ingredient-icon_icon__1eQHR\",\"icon_wrapper\":\"ingredient-icon_icon_wrapper__1mPmU\",\"icon_img\":\"ingredient-icon_icon_img__3TVHL\",\"icon_img_hidden\":\"ingredient-icon_icon_img_hidden__1orRs\",\"icon_count\":\"ingredient-icon_icon_count__1ZiPU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"feed-info-details_content__50Lov\",\"title\":\"feed-info-details_title__2uh5s\",\"name\":\"feed-info-details_name__1-hgv\",\"status\":\"feed-info-details_status__3xzyk\",\"status_green\":\"feed-info-details_status_green__pif07\",\"ingredients_list\":\"feed-info-details_ingredients_list__1ExIp\",\"row\":\"feed-info-details_row__2xYwC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card_wrapper\":\"order-card_card_wrapper__1tW4S\",\"card_row\":\"order-card_card_row__3neCy\",\"card_row_big\":\"order-card_card_row_big__t5-ed\",\"card_list\":\"order-card_card_list__Jzxrr\",\"link\":\"order-card_link__3ax6Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"summury_status\":\"summury-of-orders_summury_status__22SmB\",\"column_wrapper\":\"summury-of-orders_column_wrapper__y4cUn\",\"orders_list\":\"summury-of-orders_orders_list__2MAj3\",\"item_done\":\"summury-of-orders_item_done__4dFNR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__3EgZc\",\"modal_row\":\"modal_modal_row__2nRFp\",\"icon_wrapper\":\"modal_icon_wrapper__kIxgC\",\"wrapper\":\"modal_wrapper__3EElm\",\"wrapper_wide\":\"modal_wrapper_wide__3Ozhd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"app-header_wrapper__vWa44\",\"container\":\"app-header_container__2DegG\",\"header_content\":\"app-header_header_content__3QI9q\",\"elements_wrapper\":\"app-header_elements_wrapper__170yO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"total\":\"total-price_total__36oDQ\",\"icon_big\":\"total-price_icon_big__1szQ3\",\"icon_def\":\"total-price_icon_def__kyQl9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu_row\":\"menu_menu_row___JLvQ\",\"menu_column\":\"menu_menu_column__134wB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"profile_section__1Aa_c\",\"left_column\":\"profile_left_column__38CNV\",\"wrapper_item\":\"profile_wrapper_item__11w9-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"form-wrapper_wrapper__3l37B\",\"container\":\"form-wrapper_container__3xED_\",\"form\":\"form-wrapper_form__PtkoS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ingredient-item_item__3F6k6\",\"item_title\":\"ingredient-item_item_title__jn0FW\",\"total\":\"ingredient-item_total__370Tc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"nav-item_item__xBzFq\",\"item_active\":\"nav-item_item_active__3I3v1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"features\":\"ingredient-details_features__12TiG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapp\":\"ingredient_wrapp__1748e\",\"content\":\"ingredient_content__2y48l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu_item\":\"element-with-icon_menu_item__2Pzzg\",\"menu_item_active\":\"element-with-icon_menu_item_active__1wCxg\",\"link\":\"element-with-icon_link__Ab059\",\"link_icon\":\"element-with-icon_link_icon__KmiFT\"};"],"sourceRoot":""}